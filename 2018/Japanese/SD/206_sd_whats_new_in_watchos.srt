
1
00:00:07,040 --> 00:00:16,383
(音楽)

2
00:00:23,190 --> 00:00:24,157
どうも

3
00:00:24,925 --> 00:00:28,529
(拍手)

4
00:00:28,629 --> 00:00:29,696
こんにちは

5
00:00:31,398 --> 00:00:35,369
watchOS 新機能の
セッションへようこそ

6
00:00:35,869 --> 00:00:40,073
本日は新機能の概要について
説明します

7
00:00:40,174 --> 00:00:44,344
開発者や設計者
製品開発リーダーの方々は

8
00:00:44,444 --> 00:00:46,847
ぜひ活用してください

9
00:00:46,947 --> 00:00:51,518
新APIとInterface Builderの
オプションも説明します

10
00:00:51,985 --> 00:00:55,255
私はフレームワークチームの
ロリ･ハイランチョウ

11
00:00:55,355 --> 00:00:58,192
watchOS 5の
新オプションについて―

12
00:00:58,292 --> 00:01:02,829
ご説明できることを
うれしく思います

13
00:00:58,292 --> 00:01:02,829
ご説明できることを
うれしく思います

14
00:01:04,831 --> 00:01:08,635
2015年のリリース以来
長い道のりでした

15
00:01:08,936 --> 00:01:12,339
そして複数の構成要素で
構成される―

16
00:01:12,439 --> 00:01:15,042
Watch Appを実現しました

17
00:01:15,742 --> 00:01:19,780
通知 コンプリケーション
Siriショートカット

18
00:01:19,880 --> 00:01:24,451
この３つの連係により
適切なタイミングで―

19
00:01:24,551 --> 00:01:27,487
必要な情報が表示されます

20
00:01:29,022 --> 00:01:33,527
Series 3ではiPhoneが
なくても通話できる―

21
00:01:33,627 --> 00:01:36,029
Wi-Fiオプションがあります

22
00:01:36,129 --> 00:01:39,333
ユーザはiPhoneなしで―

23
00:01:39,566 --> 00:01:43,003
完結するWatchを
求めています

24
00:01:43,937 --> 00:01:47,274
watchOS 5の新機能を
紹介するので―

25
00:01:47,374 --> 00:01:50,244
開発に役立ててください

26
00:01:52,779 --> 00:01:56,116
Watchユーザに
定評があるのは―

27
00:01:56,216 --> 00:01:59,253
まずは通知機能でしょう

28
00:01:59,620 --> 00:02:03,824
この機能に
新たな改善点を加えました

29
00:01:59,620 --> 00:02:03,824
この機能に
新たな改善点を加えました

30
00:02:05,826 --> 00:02:08,161
DynamicNotificationsで

31
00:02:08,262 --> 00:02:10,663
テキストと画像の通知が
可能です

32
00:02:10,764 --> 00:02:13,767
ただし配信時に見逃すと―

33
00:02:14,334 --> 00:02:19,506
ユーザは同じ通知を
後から見られませんでした

34
00:02:19,973 --> 00:02:24,411
このため表示時間は
通知センター経由より―

35
00:02:24,511 --> 00:02:27,214
あえて長く設定しています

36
00:02:28,582 --> 00:02:31,185
watchOS 5では

37
00:02:31,285 --> 00:02:33,453
DynamicNotificationsの
おかげで

38
00:02:33,854 --> 00:02:37,491
コード変更なしで
実現可能です

39
00:02:38,258 --> 00:02:41,061
この点では努力しました

40
00:02:41,261 --> 00:02:44,731
通知センターから
表示できるので―

41
00:02:44,831 --> 00:02:48,368
２つのことが
実現可能になりました

42
00:02:50,237 --> 00:02:53,006
１つ目はグループ通知です

43
00:02:53,273 --> 00:02:56,643
複数のカテゴリや
通知インターフェイスを

44
00:02:56,743 --> 00:02:59,947
設定できることは
ご存じでしょう

45
00:03:00,047 --> 00:03:02,416
スレッドIDを指定して―

46
00:03:02,516 --> 00:03:05,786
iOSからの
プッシュ通知もできます

47
00:03:07,821 --> 00:03:10,691
watchOS 5では通知が―

48
00:03:10,791 --> 00:03:14,761
通知センターで
自動的にグループ化されます

49
00:03:15,596 --> 00:03:20,334
さらにカテゴリと
スレッドIDを指定すれば―

50
00:03:21,802 --> 00:03:24,705
内蔵のメッセージAppと
同じ動作にできます

51
00:03:24,805 --> 00:03:26,173
通知の表示中に

52
00:03:26,273 --> 00:03:29,977
同じスレッドIDの
新規通知が届くと

53
00:03:30,077 --> 00:03:32,513
既存インターフェイスに
追加できます

54
00:03:33,347 --> 00:03:35,983
このオプションを使うと―

55
00:03:36,083 --> 00:03:41,321
同じ通知を何度も
呼び出せるようになるのです

56
00:03:43,857 --> 00:03:45,325
指定するには―

57
00:03:45,425 --> 00:03:50,397
Storyboardで
通知カテゴリを選びます

58
00:03:51,098 --> 00:03:54,635
そして“Handles Grouping”を
選択します

59
00:03:55,536 --> 00:03:59,773
同じカテゴリと
スレッドIDの通知が―

60
00:03:59,873 --> 00:04:02,543
追加で届くとします

61
00:03:59,873 --> 00:04:02,543
追加で届くとします

62
00:04:02,743 --> 00:04:07,714
するとdidReceive通知が
また呼び出されます

63
00:04:07,915 --> 00:04:13,053
既存インターフェイスに
追加されるようにするには

64
00:04:13,153 --> 00:04:17,690
既存ラベルに空行と
ボディ部を追加

65
00:04:17,791 --> 00:04:21,295
またはテーブルに
新規行を追加します

66
00:04:24,398 --> 00:04:28,936
watchOS 5ではdidReceiveの
シグネチャを変更

67
00:04:29,436 --> 00:04:32,840
前のバージョンは
簡素化のため

68
00:04:34,174 --> 00:04:36,610
廃止される予定です

69
00:04:37,110 --> 00:04:41,782
通知データを処理して
準備が整うまでを―

70
00:04:41,882 --> 00:04:44,484
把握するためです

71
00:04:45,285 --> 00:04:48,388
作業は必要最低限にして―

72
00:04:48,488 --> 00:04:52,526
最短で済ませるように
してください

73
00:04:54,795 --> 00:04:58,098
ちなみに
手首を上げなくても―

74
00:04:58,198 --> 00:05:01,869
同じスレッドIDの通知を
見られます

75
00:04:58,198 --> 00:05:01,869
同じスレッドIDの通知を
見られます

76
00:05:02,202 --> 00:05:06,206
通知カテゴリで
グループ化を有効にすれば

77
00:05:06,306 --> 00:05:09,977
同じスレッドIDの通知が
まとめられます

78
00:05:10,077 --> 00:05:12,946
通知センターを
タップして確認します

79
00:05:13,647 --> 00:05:16,083
新しいメッセージが届いた場合

80
00:05:16,183 --> 00:05:19,720
ロングルック通知と
同様に表示されます

81
00:05:24,491 --> 00:05:25,692
次に移ります

82
00:05:26,393 --> 00:05:32,065
watchOS 5では通知から
App機能を直接利用できます

83
00:05:32,165 --> 00:05:37,004
ユーザは通知内から
コンテンツを操作します

84
00:05:38,906 --> 00:05:42,943
例えばドライバーに
運賃を払ったり―

85
00:05:43,043 --> 00:05:47,548
駐車場の利用時間を
延長したりできます

86
00:05:47,648 --> 00:05:51,718
またレストランでの
ディナーの予約確認や―

87
00:05:51,818 --> 00:05:54,521
人数の変更も行えます

88
00:05:56,690 --> 00:05:58,325
説明しましょう

89
00:05:59,026 --> 00:06:01,862
通知インターフェイス
コントローラを作成すると

90
00:05:59,026 --> 00:06:01,862
通知インターフェイス
コントローラを作成すると

91
00:06:01,962 --> 00:06:05,933
対話型インターフェイスが
自動生成されます

92
00:06:07,835 --> 00:06:11,238
動的インターフェイスが
ある場合は―

93
00:06:11,338 --> 00:06:14,675
Storyboardで
カテゴリを選択し―

94
00:06:14,775 --> 00:06:17,778
“Has Interactive
Interface”を選択します

95
00:06:21,915 --> 00:06:25,853
いずれの場合も
古いインターフェイスは―

96
00:06:25,953 --> 00:06:28,222
そのまま残っています

97
00:06:28,555 --> 00:06:33,026
通知の表示は
動的インターフェイスと―

98
00:06:33,126 --> 00:06:36,563
通知センターの両方で
行われます

99
00:06:37,664 --> 00:06:40,801
旧OSの
動的インターフェイスは

100
00:06:40,901 --> 00:06:43,971
下位互換性のため
残しておけます

101
00:06:46,540 --> 00:06:49,142
動的インターフェイス
コントローラでは―

102
00:06:49,243 --> 00:06:53,480
ボタンやスイッチを
ライブラリから追加できます

103
00:06:53,580 --> 00:06:57,150
画面最上部のメニューから
選択可能です

104
00:07:00,654 --> 00:07:03,857
ジェスチャー認識機能も
追加できます

105
00:07:03,957 --> 00:07:06,460
ただし
システムジェスチャーが―

106
00:07:06,560 --> 00:07:10,664
優先されることに
注意してください

107
00:07:16,403 --> 00:07:20,807
次にインタラクティブ要素を
コードに実装します

108
00:07:20,908 --> 00:07:24,811
他のインタラクティブ要素と
同じです

109
00:07:25,312 --> 00:07:28,015
ここでIB動作をドラッグし―

110
00:07:28,115 --> 00:07:31,985
Upボタンをタップに
設定しています

111
00:07:32,085 --> 00:07:36,590
ですからタップごとに
時間が15分 増えます

112
00:07:39,026 --> 00:07:40,694
タップすると―

113
00:07:40,794 --> 00:07:45,632
ご存じのように
通知からAppが起動されます

114
00:07:46,166 --> 00:07:51,438
通常の動的および静的通知で
Appが起動されますが―

115
00:07:51,538 --> 00:07:55,242
この動作は
今回から無効にしました

116
00:07:55,342 --> 00:07:58,011
インタラクティブ要素が
あるからです

117
00:07:59,046 --> 00:08:02,749
インタラクティブ通知から
起動する場合は

118
00:07:59,046 --> 00:08:02,749
インタラクティブ通知から
起動する場合は

119
00:08:02,850 --> 00:08:06,153
新規メソッドを
使ってください

120
00:08:06,353 --> 00:08:08,822
performNotification
DefaultActionです

121
00:08:11,558 --> 00:08:15,095
通知インターフェイスの
ボタンの動作後―

122
00:08:15,195 --> 00:08:18,031
通知を“了解”に
するとします

123
00:08:18,165 --> 00:08:22,836
この例では延長ボタンで
レンタル期間を変更し

124
00:08:22,936 --> 00:08:24,838
通知も了解します

125
00:08:25,005 --> 00:08:27,674
IB動作の関数の最後で―

126
00:08:27,774 --> 00:08:30,978
performDismissActionを
呼び出します

127
00:08:33,947 --> 00:08:38,885
標準のアクションボタンでも
同じ処理が可能です

128
00:08:38,986 --> 00:08:41,989
通知を常に了解できます

129
00:08:43,490 --> 00:08:45,225
アクションボタンは

130
00:08:45,325 --> 00:08:48,795
通知インターフェイス
共通なため

131
00:08:48,896 --> 00:08:52,799
一部のボタンは使えないと
思いますか？

132
00:08:53,467 --> 00:08:55,469
watchOS 5では―

133
00:08:55,569 --> 00:08:59,072
実行時に
ボタンが表示されます

134
00:09:01,141 --> 00:09:05,212
notificationActions
プロパティによって―

135
00:09:05,312 --> 00:09:08,749
表示される動作の配列が
返されます

136
00:09:09,216 --> 00:09:13,654
このプロパティはdidReceive
通知コールバックの―

137
00:09:13,754 --> 00:09:16,123
UNNotificationAction
オブジェクト配列で設定

138
00:09:16,356 --> 00:09:21,261
これでボタンの追加や削除を
柔軟に行えます

139
00:09:23,130 --> 00:09:24,998
そして今後は―

140
00:09:25,098 --> 00:09:29,970
didReceiveの呼出し後に
動作を変更できます

141
00:09:30,237 --> 00:09:33,240
つまりユーザの操作に
応じて―

142
00:09:33,340 --> 00:09:37,778
アクションボタンを
変更できるようになります

143
00:09:40,647 --> 00:09:45,752
通知とオプションについて
説明してきましたが―

144
00:09:46,753 --> 00:09:49,923
あと２点
説明させてください

145
00:09:52,359 --> 00:09:56,697
緊急警報は新しい通知です
大きな音が―

146
00:09:56,797 --> 00:10:01,201
マナーモードでも鳴るよう
設定されています

147
00:09:56,797 --> 00:10:01,201
マナーモードでも鳴るよう
設定されています

148
00:10:01,535 --> 00:10:04,872
緊急情報の配信に
使用できます

149
00:10:05,606 --> 00:10:10,644
医療機器関連のAppや
緊急対応要員の方々に―

150
00:10:10,744 --> 00:10:12,779
便利な機能でしょう

151
00:10:13,814 --> 00:10:16,750
緊急警報を使用するには―

152
00:10:17,184 --> 00:10:22,022
通常の通知とは別に
ユーザの許可が必要です

153
00:10:24,358 --> 00:10:28,295
その反対に
サイレント配信もあります

154
00:10:28,662 --> 00:10:34,168
リアルタイム配信で画面に
割り込むのではなく

155
00:10:34,434 --> 00:10:38,572
通知センターに直接
通知を送れます

156
00:10:39,173 --> 00:10:41,608
インジケータは―

157
00:10:41,708 --> 00:10:45,779
通知センターの通知以外
表示されません

158
00:10:46,713 --> 00:10:51,218
ただし画面上部のスワイプで
表示できます

159
00:10:56,290 --> 00:10:59,827
サイレント配信を
選択する場合は―

160
00:10:59,927 --> 00:11:05,332
初回起動時のユーザ許可は
必要ありません

161
00:10:59,927 --> 00:11:05,332
初回起動時のユーザ許可は
必要ありません

162
00:11:05,899 --> 00:11:08,802
代わりに
暫定許可を要求します

163
00:11:09,303 --> 00:11:13,407
ユーザは通知の種類を
確認してから―

164
00:11:13,507 --> 00:11:17,077
配信のタイミングを
決定できます

165
00:11:19,346 --> 00:11:21,915
開発時の選択とは別に―

166
00:11:22,015 --> 00:11:26,420
最終的にはユーザが
通知方法を決めます

167
00:11:26,787 --> 00:11:29,490
サイレント配信の場合は―

168
00:11:29,590 --> 00:11:32,893
通知を左側へスワイプします

169
00:11:32,993 --> 00:11:37,231
ここで通知の設定内容を
変更できます

170
00:11:41,335 --> 00:11:45,005
通知はさらに
ダイナミックになりました

171
00:11:45,172 --> 00:11:48,909
動的インターフェイスに
より―

172
00:11:49,009 --> 00:11:51,712
通知の配信方法を選べます

173
00:11:52,346 --> 00:11:56,416
また初めて
グループ化も実現しました

174
00:11:57,217 --> 00:12:01,421
内蔵メッセージAppのような
通知を設計できます

175
00:11:57,217 --> 00:12:01,421
内蔵メッセージAppのような
通知を設計できます

176
00:12:02,489 --> 00:12:07,794
また実行時に表示される
コントロールやボタンで―

177
00:12:07,895 --> 00:12:11,832
各自のApp内容を
通知に盛り込めます

178
00:12:12,733 --> 00:12:17,604
緊急度に応じた通知配信も
可能になりました

179
00:12:18,539 --> 00:12:20,774
通知の詳細については―

180
00:12:21,942 --> 00:12:24,845
これらのセッションへどうぞ

181
00:12:24,945 --> 00:12:27,948
“Designing Notifications”が
特にお勧めです

182
00:12:28,048 --> 00:12:33,120
効果的な通知設計のヒントが
得られるでしょう

183
00:12:36,924 --> 00:12:41,328
通知に関する説明は
これで終わります

184
00:12:41,428 --> 00:12:46,433
それでは他の追加機能を
見ていきましょう

185
00:12:47,267 --> 00:12:50,170
まずはローカル音声再生です

186
00:12:51,939 --> 00:12:55,442
実装済みの方もいると
思います

187
00:12:55,542 --> 00:12:59,213
URLセッションでファイルを
ダウンロードし―

188
00:12:59,513 --> 00:13:02,382
WKAudioFileQueuePlayerで
再生できます

189
00:12:59,513 --> 00:13:02,382
WKAudioFileQueuePlayerで
再生できます

190
00:13:03,350 --> 00:13:08,255
watchOS 5では音声Appの
開発がより容易となり―

191
00:13:08,355 --> 00:13:11,058
音声品質も改善しました

192
00:13:13,293 --> 00:13:18,298
バックグラウンドオーディオ
モードにより

193
00:13:18,465 --> 00:13:22,669
音声機能に特化したAppを
開発できます

194
00:13:22,836 --> 00:13:27,174
音声を再生するために
他分野のAppを―

195
00:13:27,541 --> 00:13:29,143
作らずに済みます

196
00:13:29,843 --> 00:13:34,214
(拍手)

197
00:13:35,315 --> 00:13:39,386
AVAudioPlayerと
AVAudioEngineの適用により

198
00:13:39,486 --> 00:13:43,290
既知のメソッドと
プロパティを使用できます

199
00:13:43,390 --> 00:13:46,260
音声App作成に便利です

200
00:13:46,827 --> 00:13:50,764
再生関連のコードを
フレームワークに移せば―

201
00:13:50,864 --> 00:13:53,700
iOSとWatchで
コードを共有できます

202
00:13:54,968 --> 00:13:57,237
iOSと異なるのは―

203
00:13:58,138 --> 00:14:02,176
長いフォームの音声再生には
ヘッドフォンか―

204
00:13:58,138 --> 00:14:02,176
長いフォームの音声再生には
ヘッドフォンか―

205
00:14:02,276 --> 00:14:07,147
外部スピーカーの接続が
必要になる点です

206
00:14:08,148 --> 00:14:12,352
ルート共有ポリシーを
長いフォームに設定する場合

207
00:14:12,452 --> 00:14:15,923
Bluetoothルーティングが
必要です

208
00:14:17,257 --> 00:14:21,128
AirPodsや
Beats Studio 3などは

209
00:14:21,228 --> 00:14:25,432
Apple Wireless Chipで
自動接続されます

210
00:14:25,632 --> 00:14:30,604
ルートピッカーで
他のヘッドフォンを選ぶには

211
00:14:30,704 --> 00:14:35,275
activateWithOptions
完了APIを呼び出します

212
00:14:38,178 --> 00:14:43,317
MPNowPlayingInfoCenter
APIでnowPlaying Appを―

213
00:14:43,517 --> 00:14:45,886
再生情報と共に追加できます

214
00:14:45,986 --> 00:14:50,290
つまりApp情報が
nowPlayingに表示されます

215
00:14:53,260 --> 00:14:58,332
メディアリモートコマンドを
処理できるので―

216
00:14:58,599 --> 00:15:02,302
再生や曲選択のコマンドを
設定できます

217
00:14:58,599 --> 00:15:02,302
再生や曲選択のコマンドを
設定できます

218
00:15:05,405 --> 00:15:10,677
そしてカスタムUIで
音量調節が可能になりました

219
00:15:10,978 --> 00:15:16,016
オブジェクトライブラリの
新規ビューを使えます

220
00:15:16,116 --> 00:15:19,553
(拍手)

221
00:15:19,653 --> 00:15:23,557
待機中はUIが
淡色で表示されます

222
00:15:23,657 --> 00:15:27,861
Digital Crownを回すと
音量調節の色が―

223
00:15:27,961 --> 00:15:29,596
平常時用に変わります

224
00:15:32,299 --> 00:15:36,603
音声App作成の
セッションがあります

225
00:15:36,703 --> 00:15:41,341
出席して新規APIの詳細と
ベストプラクティスを

226
00:15:41,441 --> 00:15:44,044
学ぶことをお勧めします

227
00:15:44,378 --> 00:15:46,747
またバックグラウンド
オーディオと

228
00:15:46,847 --> 00:15:50,217
接続性のラボも
木曜日にあります

229
00:15:52,719 --> 00:15:58,659
音声Appではなくても
WatchやiPhoneの音声を―

230
00:15:58,759 --> 00:16:02,563
Appで調節したい場合も
あります

231
00:15:58,759 --> 00:16:02,563
Appで調節したい場合も
あります

232
00:16:03,464 --> 00:16:08,335
ワークアウト中に
左スワイプで調節できます

233
00:16:08,702 --> 00:16:14,441
nowPlayingViewが
埋め込み可能になりました

234
00:16:16,610 --> 00:16:20,347
IBのオブジェクト
ライブラリにあります

235
00:16:20,848 --> 00:16:25,686
画面全体ビューなので
ページレイアウトを使います

236
00:16:26,620 --> 00:16:31,959
このビューは外部App音声を
調節するものなので―

237
00:16:32,059 --> 00:16:36,864
ユーザが聴取している
内容が表示されます

238
00:16:39,800 --> 00:16:44,638
ついでに新規オプションと
変更内容に触れます

239
00:16:45,239 --> 00:16:49,409
旧バージョンで38ミリ型に
アセットを追加し―

240
00:16:49,510 --> 00:16:53,180
42ミリ型に
追加し忘れたとしましょう

241
00:16:53,380 --> 00:16:56,250
42ミリ型では
アセットはありません

242
00:16:56,583 --> 00:16:59,920
今バージョンでは42ミリ型に
アセットがない場合―

243
00:17:00,020 --> 00:17:02,456
38ミリ型に自動調整されます

244
00:17:04,223 --> 00:17:07,828
両サイズへの
アセット追加は不要です

245
00:17:07,928 --> 00:17:11,031
アセットカタログの
選択で―

246
00:17:11,131 --> 00:17:14,300
まずはPDFを追加します

247
00:17:14,401 --> 00:17:18,105
次に自動スケーリングを
自動に設定します

248
00:17:23,810 --> 00:17:28,281
これで適切なサイズの
アセットが表示されます

249
00:17:30,584 --> 00:17:33,821
タイトルテキストスタイルも
公開したので―

250
00:17:33,921 --> 00:17:38,725
さらにテキストの差別化を
図れるでしょう

251
00:17:39,259 --> 00:17:42,529
動的タイプとも
互換性があるので―

252
00:17:42,629 --> 00:17:48,202
ユーザがフォントサイズや
設定を変更できます

253
00:17:49,970 --> 00:17:54,842
大きなタイトルスタイルは
IBとAPIで使えます

254
00:17:58,679 --> 00:18:01,815
スケート用Appを
作成中なので

255
00:17:58,679 --> 00:18:01,815
スケート用Appを
作成中なので

256
00:18:01,915 --> 00:18:06,587
ワークアウトAppの改善点を
紹介しましょう

257
00:18:07,421 --> 00:18:10,357
APIを完全に書き換えて―

258
00:18:10,457 --> 00:18:14,127
簡素化と信頼性の向上を
図りました

259
00:18:14,461 --> 00:18:17,631
内蔵のワークアウトAppは
このAPIを使用します

260
00:18:18,632 --> 00:18:21,101
皆さんも そうしてください

261
00:18:23,270 --> 00:18:27,474
ワークアウト開始と
データ収集が容易です

262
00:18:27,574 --> 00:18:30,677
HealthKitワークアウトの
初期化子と―

263
00:18:30,777 --> 00:18:34,581
新規Workout Builder
APIのおかげです

264
00:18:35,983 --> 00:18:41,722
セッションを作成して
Builderを取得　データを収集

265
00:18:41,989 --> 00:18:43,190
これだけです

266
00:18:44,324 --> 00:18:45,926
コードはこうです

267
00:18:47,494 --> 00:18:50,030
healthStoreで
セッションを作成し―

268
00:18:50,130 --> 00:18:53,700
workoutConfigurationで
種類を指定します

269
00:18:54,902 --> 00:18:58,672
セッションに紐づく
HKライブBuilderを取得し

270
00:18:59,373 --> 00:19:00,941
収集を開始します

271
00:18:59,373 --> 00:19:00,941
収集を開始します

272
00:19:02,009 --> 00:19:05,679
種類別にデータが
自動収集されます

273
00:19:05,779 --> 00:19:10,384
一時停止と再開のデータも
収集されるので―

274
00:19:10,484 --> 00:19:14,021
正確な経過時間データが
得られます

275
00:19:16,256 --> 00:19:18,525
ワークアウトの最中に―

276
00:19:18,625 --> 00:19:23,464
Appがクラッシュしても
自動的に再起動されます

277
00:19:23,564 --> 00:19:27,668
(拍手)

278
00:19:28,202 --> 00:19:32,806
HKHealthStore recoverActive
WorkoutSession APIを使えば

279
00:19:32,906 --> 00:19:37,478
セッションは
以前の状態に復元されます

280
00:19:40,314 --> 00:19:45,652
ワークアウトAPIと
データ収集の詳細については

281
00:19:45,752 --> 00:19:48,255
明日午後の“new ways
to work with workouts”か―

282
00:19:48,355 --> 00:19:51,959
“Health and Fitness
Technologies”ラボへ

283
00:19:54,995 --> 00:19:55,996
続いて―

284
00:19:56,096 --> 00:20:00,667
Siriの文字盤と
ショートカットについてです

285
00:19:56,096 --> 00:20:00,667
Siriの文字盤と
ショートカットについてです

286
00:20:01,468 --> 00:20:05,873
Keynoteで説明されたように
Siriショートカットは―

287
00:20:05,973 --> 00:20:09,710
頻繁に行う操作を
より簡単にします

288
00:20:10,878 --> 00:20:15,849
Siri文字盤に表示される
これらのタスクは―

289
00:20:15,949 --> 00:20:18,819
少しの手間で開発可能です

290
00:20:19,753 --> 00:20:23,023
ショートカットの
効果的な使い方と―

291
00:20:23,123 --> 00:20:27,261
Appごとの違いを
説明していきます

292
00:20:29,429 --> 00:20:32,132
良いショートカットとは―

293
00:20:33,133 --> 00:20:36,303
ユーザの手間を
省くものです

294
00:20:36,403 --> 00:20:40,307
適切な情報を表示し
操作を迅速にします

295
00:20:40,607 --> 00:20:44,678
オプションを提示した画面を
起動したり―

296
00:20:44,845 --> 00:20:47,648
Appの機能を
提供したりします

297
00:20:47,748 --> 00:20:49,750
朝のコーヒーの注文や

298
00:20:49,850 --> 00:20:53,487
ディナーの予約
チョコの注文などです

299
00:20:54,655 --> 00:20:58,692
１～２回のタップ操作を
想定しましょう

300
00:21:00,928 --> 00:21:04,364
ショートカットは
操作別か目的別です

301
00:21:04,998 --> 00:21:09,670
特定のコンテキストを備えたAppの
起動には操作別が便利です

302
00:21:10,537 --> 00:21:15,943
例えば食事の記録画面を
開くとします

303
00:21:18,111 --> 00:21:23,684
目的別の場合は必ずしも
App起動は必要ありません

304
00:21:23,784 --> 00:21:26,053
コーヒーの注文などです

305
00:21:26,820 --> 00:21:31,758
Siriショートカットを
ユーザがタップすると―

306
00:21:31,859 --> 00:21:34,127
確認画面が表示されます

307
00:21:34,761 --> 00:21:36,463
“注文しますか？”

308
00:21:37,130 --> 00:21:39,566
ユーザが確認すると―

309
00:21:39,666 --> 00:21:43,103
Appを起動せずに
実行されます

310
00:21:43,337 --> 00:21:47,774
必要ならAppを起動または
復元できます

311
00:21:50,010 --> 00:21:55,849
ショートカットは操作履歴を
考慮したものが表示されます

312
00:21:56,250 --> 00:22:01,422
ショートカットの学習のため
目的などを提供してください

313
00:21:56,250 --> 00:22:01,422
ショートカットの学習のため
目的などを提供してください

314
00:22:02,089 --> 00:22:06,393
ユーザがオーディオブックを
再生する際

315
00:22:06,493 --> 00:22:10,731
音声AppはINMedia
PlaybackIntentを提供

316
00:22:13,867 --> 00:22:17,438
Watch文字盤に表示される
ショートカットは―

317
00:22:17,538 --> 00:22:23,143
関連性の高いものから
画面上部に表示されます

318
00:22:24,812 --> 00:22:28,415
過去の操作目的や
実行内容に応じます

319
00:22:28,515 --> 00:22:31,518
また検索に
指定された内容や―

320
00:22:31,618 --> 00:22:35,989
予測内容も関連情報として
考慮されます

321
00:22:36,123 --> 00:22:40,494
ただし文字盤に表示するには
システムに明示的に―

322
00:22:40,594 --> 00:22:44,765
関連する時間と
場所のヒントを提供します

323
00:22:47,034 --> 00:22:51,438
構成要素は操作別または
目的別ショートカット

324
00:22:51,738 --> 00:22:54,174
そしてテキストや画像を
定義する―

325
00:22:54,274 --> 00:22:57,844
任意オプションの
Watchテンプレートです

326
00:22:58,178 --> 00:23:02,015
関連度が最も高い時間
場所と状況を―

327
00:22:58,178 --> 00:23:02,015
関連度が最も高い時間
場所と状況を―

328
00:23:02,115 --> 00:23:05,352
定義する関連プロバイダも
含まれます

329
00:23:07,554 --> 00:23:10,691
それでは次に
関連ショートカットの―

330
00:23:10,791 --> 00:23:14,127
２つの構成要素を
説明しましょう

331
00:23:16,330 --> 00:23:20,000
INDefaultCardTemplateは

332
00:23:20,100 --> 00:23:24,438
タイトルと任意のタイトル
画像で構成されます

333
00:23:24,872 --> 00:23:30,444
INShortcutの情報を
使うこともできますが―

334
00:23:30,644 --> 00:23:34,248
なるべく情報を
提供してください

335
00:23:34,348 --> 00:23:38,118
ユーザに
分かりやすくするためです

336
00:23:40,687 --> 00:23:42,589
関連プロバイダでは―

337
00:23:42,689 --> 00:23:46,827
日付と場所
または状況を指定します

338
00:23:47,494 --> 00:23:50,964
ショートカットが
役立つ時間と場所は？

339
00:23:51,064 --> 00:23:55,502
ユーザが日中に見て
タップするのか？

340
00:23:55,936 --> 00:23:58,739
特定の日時に関連するのか？

341
00:23:59,106 --> 00:24:01,208
場所に基づくのか？

342
00:23:59,106 --> 00:24:01,208
場所に基づくのか？

343
00:24:02,676 --> 00:24:06,046
関連ショートカットは
配列構造なので―

344
00:24:06,146 --> 00:24:08,816
複数の種類を指定できます

345
00:24:08,916 --> 00:24:13,320
例えば時間と場所
両方に関連する場合です

346
00:24:15,656 --> 00:24:19,493
プロバイダはシステムへの
ヒントになります

347
00:24:19,593 --> 00:24:24,531
ユーザが使用することで
関連性が認められ―

348
00:24:24,731 --> 00:24:30,137
使用されなければ
関連性は低いとみなされます

349
00:24:32,840 --> 00:24:37,778
RelevantShortcutsを
実行します

350
00:24:37,878 --> 00:24:40,514
文字盤に表示するためです

351
00:24:41,348 --> 00:24:45,853
iOSやWatchから
提供されます

352
00:24:46,887 --> 00:24:51,225
iOSショートカットは
定期的にWatchに同期され

353
00:24:51,325 --> 00:24:55,028
Watchショートカットとして
統合されます

354
00:24:55,996 --> 00:25:00,801
iOSショートカット対応なら
Watch Appが実行します

355
00:24:55,996 --> 00:25:00,801
iOSショートカット対応なら
Watch Appが実行します

356
00:25:01,168 --> 00:25:04,271
それ以外の場合
ショートカットは―

357
00:25:05,572 --> 00:25:08,742
インターネット経由で
実行されます

358
00:25:11,378 --> 00:25:17,084
関連ショートカットの
サブセットも表示できます

359
00:25:17,684 --> 00:25:22,656
ただしバックグラウンドでの
実行がサポートされ―

360
00:25:22,790 --> 00:25:26,960
暗号化データアクセスなしの
実行に限ります

361
00:25:27,861 --> 00:25:32,199
これらのショートカットは
iPhoneで実行されます

362
00:25:32,666 --> 00:25:37,671
Appでショートカットを
ローカル処理する方が―

363
00:25:37,771 --> 00:25:41,942
ユーザにとっての体験が
向上します

364
00:25:44,244 --> 00:25:47,548
関連ショートカットは
定期的に更新を

365
00:25:47,648 --> 00:25:52,853
ユーザがショートカットを
Siriでタップすると―

366
00:25:53,020 --> 00:25:55,722
実行時に更新が行われます

367
00:25:56,390 --> 00:26:01,028
一部のショートカットは
起動しなくても有用です

368
00:25:56,390 --> 00:26:01,028
一部のショートカットは
起動しなくても有用です

369
00:26:01,128 --> 00:26:04,498
前のスライドの
CARROT Weatherは―

370
00:26:04,598 --> 00:26:10,104
タップせず眺めるだけで
22度で曇りだと分かります

371
00:26:11,138 --> 00:26:14,708
このためのバックグラウンド
タスクがあります

372
00:26:14,808 --> 00:26:18,345
WKRelevantShortcutRefresh
BackgroundTaskです

373
00:26:19,112 --> 00:26:23,884
このタスクでは
データ更新の有無が確認され

374
00:26:23,984 --> 00:26:26,420
新規ショートカットが
提供されます

375
00:26:27,354 --> 00:26:31,525
これらのタスクは
ユーザの使用を考慮します

376
00:26:31,625 --> 00:26:35,129
眺めるだけの場合も
該当します

377
00:26:38,699 --> 00:26:40,601
目的別ショートカットは―

378
00:26:40,701 --> 00:26:45,472
バックグラウンドで実行時に
更新される場合があります

379
00:26:46,440 --> 00:26:51,345
WatchKit Extensionとは
異なるプロセスなので―

380
00:26:51,445 --> 00:26:54,681
新しいタスクが提供されます

381
00:26:54,781 --> 00:26:58,218
WKIntentDidRunRefresh
BackgroundTaskです

382
00:26:58,318 --> 00:27:02,589
メインExtensionを実行して
対象となる―

383
00:26:58,318 --> 00:27:02,589
メインExtensionを実行して
対象となる―

384
00:27:02,689 --> 00:27:06,393
スナップショットや
コンプリケーションを更新

385
00:27:09,029 --> 00:27:12,633
iPhoneのショートカット名を
ユーザが設定し―

386
00:27:13,867 --> 00:27:19,306
そのフレーズを使って
実行できるようになりました

387
00:27:20,340 --> 00:27:23,110
Watchとも同期されます

388
00:27:23,210 --> 00:27:25,846
例えばユーザは
手首を上げ―

389
00:27:25,946 --> 00:27:28,715
“ミントを一杯”と
言うとします

390
00:27:28,816 --> 00:27:31,952
これでミントモヒートを
注文できます

391
00:27:33,120 --> 00:27:36,723
Siri文字盤に
表示されていなくても―

392
00:27:36,823 --> 00:27:39,827
ショートカットを
起動できます

393
00:27:41,929 --> 00:27:46,200
要約するとショートカットに
関連情報を提供すれば―

394
00:27:46,300 --> 00:27:48,569
迅速な操作が可能です

395
00:27:49,169 --> 00:27:53,006
iPhoneとWatchで
ショートカットを作成し―

396
00:27:53,106 --> 00:27:57,077
Siri文字盤に
表示することができます

397
00:27:57,578 --> 00:28:02,516
ユーザは直接
ショートカットを操作し

398
00:27:57,578 --> 00:28:02,516
ユーザは直接
ショートカットを操作し

399
00:28:02,616 --> 00:28:06,019
watchOS Appで
最高の体験ができます

400
00:28:07,755 --> 00:28:10,090
ショートカットの
詳細については―

401
00:28:10,190 --> 00:28:13,760
これらのセッションで
学んでください

402
00:28:13,861 --> 00:28:18,499
“Siri Shortcuts on
the Siri Watch Face”では

403
00:28:18,599 --> 00:28:22,336
APIについて詳しく学べます

404
00:28:24,972 --> 00:28:29,176
では本日のおさらいを
しておきましょう

405
00:28:29,276 --> 00:28:32,713
通知をより
使いやすくすること

406
00:28:32,813 --> 00:28:37,851
動的なインターフェイスを
通知用に作成します

407
00:28:38,519 --> 00:28:43,056
２つ目は音声の再生です
AV Foundation APIや

408
00:28:43,156 --> 00:28:46,427
メディアリモートコマンドと
再生情報を使います

409
00:28:47,394 --> 00:28:52,132
WorkoutBuilder APIによる
フィットネスAppの作成

410
00:28:52,900 --> 00:28:57,738
関連ショートカットによる
文字盤の改善を学びました

411
00:28:59,973 --> 00:29:03,010
今日の内容や
watchOSでの作業について

412
00:28:59,973 --> 00:29:03,010
今日の内容や
watchOSでの作業について

413
00:29:03,110 --> 00:29:07,014
質問がある場合は
ラボまでどうぞ

414
00:29:07,114 --> 00:29:10,951
ぜひ お話を
聞かせてください

415
00:29:11,051 --> 00:29:14,054
WWDCへのご参加に感謝します

416
00:29:14,154 --> 00:29:17,724
(拍手)