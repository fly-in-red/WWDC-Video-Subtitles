
1
00:00:07,107 --> 00:00:13,614
(音楽)

2
00:00:21,822 --> 00:00:24,258
みなさん　こんにちは

3
00:00:24,358 --> 00:00:28,328
(拍手)

4
00:00:28,428 --> 00:00:29,897
今日は ようこそ

5
00:00:30,197 --> 00:00:34,001
私はエンジニアの
ジェシー･ピーズです

6
00:00:34,168 --> 00:00:37,404
アプリケーションの作り方を
説明します

7
00:00:38,739 --> 00:00:42,776
慣れた場所から
一歩踏み出して―

8
00:00:42,876 --> 00:00:45,145
夢を形にしましょう

9
00:00:45,412 --> 00:00:49,283
朝 カフェのレジに
並んでいる時や―

10
00:00:49,683 --> 00:00:53,353
ここへ来る機内で
メモしたアイデア

11
00:00:53,854 --> 00:00:57,624
友達に内緒で
教えたアイデア

12
00:00:58,091 --> 00:01:00,961
それを形にしましょう

13
00:00:58,091 --> 00:01:00,961
それを形にしましょう

14
00:01:03,397 --> 00:01:05,199
ジョゼフ･チルトンは
言いました

15
00:01:05,299 --> 00:01:08,735
“想像的に生きるには
間違える恐れを捨てろ”

16
00:01:09,102 --> 00:01:12,906
新しいものを作る時
障害は付き物ですが―

17
00:01:13,240 --> 00:01:18,545
夢のアプリケーションを作る
道具をお見せします

18
00:01:20,280 --> 00:01:25,986
まずアイデアを整理し
Xcodeを説明してから

19
00:01:26,253 --> 00:01:29,089
Swiftで
ゲームを作りましょう

20
00:01:29,223 --> 00:01:32,426
プログラミング言語は
分かりますか？

21
00:01:32,893 --> 00:01:35,629
もしSwiftが初めてなら―

22
00:01:35,729 --> 00:01:40,267
「App Development with Swift」が
お薦めです

23
00:01:40,367 --> 00:01:43,136
iPadのSwift Playgroundsも
いいですよ

24
00:01:44,605 --> 00:01:49,743
アプリケーションのページを増やし
データを表示する方法は

25
00:01:49,843 --> 00:01:52,212
後ほどタヌが説明します

26
00:01:53,947 --> 00:01:57,150
最近 タヌと
動物園に行きました

27
00:01:57,251 --> 00:01:59,286
ユニコーンがいるんです

28
00:01:59,987 --> 00:02:03,557
長蛇の列に
並ぶことになり―

29
00:01:59,987 --> 00:02:03,557
長蛇の列に
並ぶことになり―

30
00:02:03,657 --> 00:02:07,494
待つ間の暇つぶしが
欲しくなりました

31
00:02:07,594 --> 00:02:09,229
それでゲームを作ることに

32
00:02:09,329 --> 00:02:13,167
空いた時間に遊べて
楽しめるものです

33
00:02:13,433 --> 00:02:17,004
ゲームにユニコーンは
入れたいです

34
00:02:17,504 --> 00:02:20,307
それと人が嫌がるもの

35
00:02:20,641 --> 00:02:22,142
ウンチです

36
00:02:24,011 --> 00:02:28,115
ユニコーンとウンチの
もぐらたたきに決めました

37
00:02:28,215 --> 00:02:33,053
最終的にLeaderboardで
得点を管理します

38
00:02:33,153 --> 00:02:35,355
みんな 競争が好きですよね

39
00:02:36,690 --> 00:02:39,459
ではゲームを見てみましょう

40
00:02:39,826 --> 00:02:43,397
スタートボタンを押すと
画面のどこかに―

41
00:02:43,497 --> 00:02:47,467
ユニコーンかウンチの
絵文字が現れます

42
00:02:47,768 --> 00:02:51,505
ユーザが
たたける時間は１秒です

43
00:02:52,539 --> 00:02:56,076
ユニコーンをタップすると
１点もらえて―

44
00:02:56,176 --> 00:02:59,780
ウンチをたたくと
ゲームオーバーです

45
00:03:00,180 --> 00:03:04,351
さらに ユニコーンを
タップできずに逃しても

46
00:03:04,718 --> 00:03:07,120
ゲーム終了です

47
00:03:07,287 --> 00:03:11,558
ウンチを避けて すべての
ユニコーンをたたくのです

48
00:03:11,658 --> 00:03:12,626
見てみましょう

49
00:03:16,296 --> 00:03:17,831
そこよ　いいわ

50
00:03:18,665 --> 00:03:19,867
ユニコーンよ

51
00:03:22,436 --> 00:03:23,637
また出たわ

52
00:03:23,737 --> 00:03:24,605
やっちゃった

53
00:03:24,705 --> 00:03:26,940
ウンチをたたいちゃった

54
00:03:28,141 --> 00:03:29,643
さあ 本題に入るわ

55
00:03:30,711 --> 00:03:35,382
XcodeとはmacOS専用の
ツールで―

56
00:03:35,482 --> 00:03:39,887
iOS macOS watchOS tvOSの
アプリケーションが作れます

57
00:03:40,187 --> 00:03:42,990
App Storeにあります

58
00:03:43,490 --> 00:03:48,328
Create a new Xcode projectを
Xcodeで選択します

59
00:03:48,996 --> 00:03:53,634
いくつかテンプレートが
表示されますが―

60
00:03:54,067 --> 00:03:56,537
今回はSingle Viewを
使います

61
00:03:56,637 --> 00:03:59,439
複数のページから成る
アプリケーションや―

62
00:03:59,540 --> 00:04:01,942
ゲーム用の
テンプレートもあります

63
00:03:59,540 --> 00:04:01,942
ゲーム用の
テンプレートもあります

64
00:04:02,042 --> 00:04:07,314
今回はSingle Viewを選び
Nextをクリックします

65
00:04:08,749 --> 00:04:12,519
アプリケーション名を入れます
“消えるユニコーン”

66
00:04:12,619 --> 00:04:15,255
組織名は
“サンプルチーム”です

67
00:04:15,355 --> 00:04:16,857
Nextをクリック

68
00:04:17,324 --> 00:04:21,495
保存場所を選んだら
設定に入ります

69
00:04:21,595 --> 00:04:24,932
今日は変更を加えないので

70
00:04:25,032 --> 00:04:28,836
左側のProject
Navigatorを見ていきます

71
00:04:29,203 --> 00:04:31,438
最初はAppDelegateです

72
00:04:32,439 --> 00:04:34,608
全アプリケーションに
作られて―

73
00:04:34,708 --> 00:04:37,978
ライフタイムイベントを
管理します

74
00:04:38,545 --> 00:04:43,183
バックグラウンドでも
フォアグラウンドでも動きます

75
00:04:43,283 --> 00:04:46,820
しかし今日は触れません

76
00:04:47,955 --> 00:04:51,792
次にMain.storyboardを
選びます

77
00:04:52,593 --> 00:04:56,496
Storyboardはアプリケーションの
UIを作る場所で―

78
00:04:56,597 --> 00:05:01,735
ボタン ラベル 画像など
UIの要素を挿入できます

79
00:04:56,597 --> 00:05:01,735
ボタン ラベル 画像など
UIの要素を挿入できます

80
00:05:02,035 --> 00:05:04,738
画面要素を作るだけでなく

81
00:05:04,838 --> 00:05:08,709
論理フローを
レイアウトする場所です

82
00:05:08,809 --> 00:05:09,943
ストーリーです

83
00:05:11,178 --> 00:05:13,514
次のView Controllerは―

84
00:05:14,948 --> 00:05:20,654
画面を管理し
論理コードを書く場所です

85
00:05:22,289 --> 00:05:26,226
Storyboardで
画面を作ってみます

86
00:05:26,793 --> 00:05:30,030
Main.storyboardを
開きます

87
00:05:30,197 --> 00:05:34,635
LaunchScreen.storyboardは
まだ開かないでください

88
00:05:34,768 --> 00:05:38,172
後でアプリケーションが
ローンチする時や

89
00:05:38,272 --> 00:05:42,075
最初にロードする時に
使います

90
00:05:43,076 --> 00:05:46,513
Storyboardの右上の―

91
00:05:46,613 --> 00:05:52,186
丸の中に四角があるボタンは
オブジェクトライブラリです

92
00:05:52,286 --> 00:05:56,490
ここのラベルや画像を
ドラッグすれば―

93
00:05:56,590 --> 00:05:58,859
Storyboardに貼れます

94
00:05:59,793 --> 00:06:03,897
アウトラインビューは
その左側にあります

95
00:05:59,793 --> 00:06:03,897
アウトラインビューは
その左側にあります

96
00:06:04,865 --> 00:06:06,934
三角をクリックすると―

97
00:06:07,034 --> 00:06:10,103
Storyboard上の
ファイルが見られます

98
00:06:10,337 --> 00:06:14,074
“何もないじゃないか”と
思いましたか？

99
00:06:14,241 --> 00:06:17,778
ゆくゆくは
要素がたくさん増えます

100
00:06:17,878 --> 00:06:23,483
ファイルが何かの下層になり
探せなくなることもあります

101
00:06:23,584 --> 00:06:27,688
要素を探す時は
ここで確認できます

102
00:06:28,488 --> 00:06:32,559
ではアプリケーションを
作り始めましょう

103
00:06:34,294 --> 00:06:39,466
Xcodeをローンチ済みの
私のPCを使います

104
00:06:39,833 --> 00:06:43,036
“消えるユニコーン”の
ファイルもあります

105
00:06:44,071 --> 00:06:46,373
Main.storyboardで―

106
00:06:46,473 --> 00:06:51,078
ゲームに使うUI要素を
追加していきます

107
00:06:51,311 --> 00:06:53,647
オブジェクトライブラリを
開くと―

108
00:06:53,747 --> 00:06:58,051
追加できる要素を
スクロールで確認できます

109
00:06:58,352 --> 00:07:02,122
ラベル ボタン
テキストフィールド

110
00:06:58,352 --> 00:07:02,122
ラベル ボタン
テキストフィールド

111
00:07:02,422 --> 00:07:05,392
進捗インジケータや
画像も追加できます

112
00:07:05,692 --> 00:07:10,597
最初にスタートボタンに使う
ボタンを探して―

113
00:07:11,064 --> 00:07:14,935
Storyboardの中央に
ボタンをドラッグします

114
00:07:15,736 --> 00:07:21,141
ダブルクリックすると
テキストを変更できます

115
00:07:21,308 --> 00:07:23,110
少し小さいですね

116
00:07:23,210 --> 00:07:29,016
大きくするには右上の
インスペクタペインを開き

117
00:07:29,116 --> 00:07:32,786
Attributes
インスペクタを選択します

118
00:07:32,886 --> 00:07:36,823
ここでアイテムの属性を
変更できます

119
00:07:36,957 --> 00:07:39,626
今回は文字を大きくします

120
00:07:39,726 --> 00:07:44,398
サイズを15から50にして
Doneをクリックします

121
00:07:44,998 --> 00:07:50,237
このアイテムを
手早くコピーするには―

122
00:07:50,337 --> 00:07:54,775
optionキーを押しながら
クリック＆ドラッグするだけ

123
00:07:55,309 --> 00:08:01,114
この文字をユニコーンの
絵文字に変更します

124
00:07:55,309 --> 00:08:01,114
この文字をユニコーンの
絵文字に変更します

125
00:08:01,215 --> 00:08:05,319
controlとcommandと
スペースキーでパネルを呼び出し

126
00:08:06,320 --> 00:08:09,656
ユニコーンを選択します

127
00:08:10,491 --> 00:08:14,761
同じようにコピーして
ウンチを作ります

128
00:08:17,664 --> 00:08:20,634
controlとcommandと
スペースキーでウンチ選択

129
00:08:21,101 --> 00:08:24,204
次にLeaderboardの
ボタンを作ります

130
00:08:24,304 --> 00:08:28,242
クリック optionキー
ドラッグ ダブルクリック

131
00:08:28,609 --> 00:08:31,645
ここで入力…
大文字になっちゃった

132
00:08:32,679 --> 00:08:38,818
そしてサイズを小さくします
25くらいですね

133
00:08:39,886 --> 00:08:40,721
できた

134
00:08:40,821 --> 00:08:46,660
得点が分かるように
得点ラベルも必要です

135
00:08:46,960 --> 00:08:50,197
オブジェクトライブラリで
ラベルを探して―

136
00:08:50,597 --> 00:08:53,400
クリックして画面にドラッグ

137
00:08:53,867 --> 00:08:56,870
文字を“０”に変更します

138
00:08:57,104 --> 00:09:01,208
サイズは
特大の90にしてみます

139
00:08:57,104 --> 00:09:01,208
サイズは
特大の90にしてみます

140
00:09:02,743 --> 00:09:04,211
いいわね

141
00:09:04,311 --> 00:09:07,748
これでUIの要素は
そろいました

142
00:09:08,348 --> 00:09:11,852
次にUIとコードを
接続します

143
00:09:12,319 --> 00:09:16,390
View Controllerと
Storyboardを同時に出すため

144
00:09:16,490 --> 00:09:18,659
アシスタントエディタを
開きます

145
00:09:18,759 --> 00:09:21,595
２つの丸が
重なっているボタンです

146
00:09:23,730 --> 00:09:24,498
いいわね

147
00:09:24,765 --> 00:09:30,470
オブジェクトとコードに
様々な接続をしていきます

148
00:09:30,604 --> 00:09:33,307
まずはアウトレット接続

149
00:09:33,407 --> 00:09:36,743
コードからUIに
指示を出すものです

150
00:09:36,977 --> 00:09:40,414
スタートボタンから
作りましょう

151
00:09:41,014 --> 00:09:44,718
スタートボタンを
選択します

152
00:09:44,818 --> 00:09:47,554
controlキーを押しながら

153
00:09:47,654 --> 00:09:52,059
View Controllerの
コードにドラッグします

154
00:09:53,026 --> 00:09:56,330
ここで接続タイプを変更…

155
00:09:56,430 --> 00:09:58,465
アウトレットですね
完璧です

156
00:09:58,565 --> 00:10:03,470
ボタンに名前を付けて
connectをクリック

157
00:09:58,565 --> 00:10:03,470
ボタンに名前を付けて
connectをクリック

158
00:10:04,438 --> 00:10:08,575
これでStoryboardと
コードが接続しました

159
00:10:08,675 --> 00:10:12,112
正しく接続されてるか
確認するには―

160
00:10:12,212 --> 00:10:15,983
ボタンの左にある
灰色の丸を使います

161
00:10:16,083 --> 00:10:17,584
カーソルを合わせて―

162
00:10:17,684 --> 00:10:21,822
オブジェクトが
ハイライトされれば大丈夫

163
00:10:22,623 --> 00:10:28,095
時間の都合でアウトレットの
コードを用意してきました

164
00:10:28,262 --> 00:10:31,832
左側の丸が開いていますね

165
00:10:31,932 --> 00:10:35,002
まだ接続がないのが
分かります

166
00:10:35,435 --> 00:10:40,741
接続するには
丸の中をクリックして

167
00:10:40,841 --> 00:10:45,979
接続したいオブジェクトに
ドラッグします

168
00:10:46,079 --> 00:10:47,147
離します

169
00:10:47,748 --> 00:10:50,184
他のボタンも同様です

170
00:10:51,118 --> 00:10:54,922
ウンチ Leaderboard
得点ラベルですね

171
00:10:55,689 --> 00:10:58,559
これですべてに接続しました

172
00:10:59,026 --> 00:11:02,396
次にアクション接続をします

173
00:10:59,026 --> 00:11:02,396
次にアクション接続をします

174
00:11:02,963 --> 00:11:07,835
アプリケーション上のイベントと
接続するコードです

175
00:11:07,935 --> 00:11:13,373
今回はスタートボタンを
押した時の動作を接続します

176
00:11:13,941 --> 00:11:19,746
controlを押しながら
スタートボタンを選択し―

177
00:11:19,880 --> 00:11:23,951
View Controllerの
コードにドラッグします

178
00:11:25,052 --> 00:11:28,222
接続タイプを
アクションに変更―

179
00:11:28,755 --> 00:11:32,025
スタートボタンと
名前を付けます

180
00:11:32,125 --> 00:11:36,430
イベントは
touchUpinsideにします

181
00:11:37,264 --> 00:11:41,134
閉じてる丸があるのが
分かりますね

182
00:11:41,235 --> 00:11:45,172
カーソルを合わせると
ボタンがハイライトします

183
00:11:45,739 --> 00:11:51,812
ユニコーンとウンチの
コードは書いてきたけど―

184
00:11:51,979 --> 00:11:55,682
今回は接続方法を
変更したいと思います

185
00:11:56,416 --> 00:12:02,589
ボタンを押すとすぐに
イベントが起こるように

186
00:11:56,416 --> 00:12:02,589
ボタンを押すとすぐに
イベントが起こるように

187
00:12:02,723 --> 00:12:06,159
押した瞬間に
得点したいですよね

188
00:12:06,260 --> 00:12:08,929
手を離した後ではダメです

189
00:12:09,029 --> 00:12:13,000
この動作を接続する
オブジェクトを選択します

190
00:12:13,100 --> 00:12:15,903
今回はgoodbuttonである
ユニコーンです

191
00:12:16,069 --> 00:12:18,138
インスペクタペインに戻って

192
00:12:18,238 --> 00:12:22,509
中に矢印がある丸いボタンを
クリックします

193
00:12:22,609 --> 00:12:24,745
Connection Inspectorです

194
00:12:25,212 --> 00:12:29,850
設定できる接続タイプを
確認できます

195
00:12:30,017 --> 00:12:33,954
今回はtouchDownと
接続します

196
00:12:34,855 --> 00:12:36,957
開いてる丸をクリックし―

197
00:12:37,057 --> 00:12:42,663
接続したいイベントまで
ドラッグして離します

198
00:12:43,697 --> 00:12:46,366
ウンチボタンも同様にします

199
00:12:46,800 --> 00:12:51,672
touchDownをクリック
イベントまでドラッグ

200
00:12:52,239 --> 00:12:53,073
できました

201
00:12:53,173 --> 00:12:58,245
アプリケーションを起動するまで
あと２つ 手順があります

202
00:12:58,745 --> 00:13:02,716
アプリケーションの
設定をするのに―

203
00:12:58,745 --> 00:13:02,716
アプリケーションの
設定をするのに―

204
00:13:02,816 --> 00:13:05,485
viewDidLoadを使います

205
00:13:05,586 --> 00:13:10,657
View Controllerに
最初に自動生成されます

206
00:13:10,757 --> 00:13:13,460
ここで設定をします

207
00:13:13,560 --> 00:13:16,630
今回はオブジェクトを
隠す設定です

208
00:13:16,730 --> 00:13:19,366
まず得点ラベルを隠します

209
00:13:19,466 --> 00:13:22,870
スタート時は
出したくありません

210
00:13:23,237 --> 00:13:24,204
ここで入力します

211
00:13:24,304 --> 00:13:29,510
pointslabel.hideで
どうかしら

212
00:13:30,177 --> 00:13:33,847
isHiddenという
プロパティがありました

213
00:13:33,947 --> 00:13:37,684
Enterを押すと
自動補完します

214
00:13:37,784 --> 00:13:42,256
optionキーを押しながら
isHiddenをクリックすると

215
00:13:42,356 --> 00:13:44,625
説明が表示されます

216
00:13:45,392 --> 00:13:49,963
これでisHiddenで
何ができるかが分かります

217
00:13:50,063 --> 00:13:52,966
今回はゲッターとセッターの
両方です

218
00:13:53,066 --> 00:13:56,236
“isHidden=true”と書けば

219
00:13:56,336 --> 00:13:59,706
スタート時は
得点ラベルが隠れます

220
00:14:00,774 --> 00:14:05,245
常時プレイをトラックする
変数も必要です

221
00:14:05,445 --> 00:14:09,216
書いておいたので
ショートカットで追加します

222
00:14:09,983 --> 00:14:16,023
初期化済みですが 追加が
必要なデータもあります

223
00:14:16,123 --> 00:14:18,492
これはゲームボタンの
リストです

224
00:14:18,892 --> 00:14:20,994
こう思ってますか？

225
00:14:21,094 --> 00:14:26,066
“ユニコーンとウンチしか
使わないのにリスト化を？”

226
00:14:26,166 --> 00:14:32,206
コードを拡張したくなった時
設計しやすくするためです

227
00:14:32,372 --> 00:14:35,709
後で素材が
増えるかもしれません

228
00:14:35,809 --> 00:14:39,613
絵文字の“しょんぼり顔”や
“いいね”を追加するかも

229
00:14:39,713 --> 00:14:43,784
その場合
“gamebutton=”―

230
00:14:45,385 --> 00:14:50,691
“goodbutton”と
“badbutton”になります

231
00:14:51,492 --> 00:14:56,763
プレイをする時に助けになる
メソッドも書きました

232
00:14:56,897 --> 00:14:58,632
ここに追加します

233
00:14:59,266 --> 00:15:03,270
そのうちのひとつは
“はじめから”です

234
00:14:59,266 --> 00:15:03,270
そのうちのひとつは
“はじめから”です

235
00:15:03,370 --> 00:15:09,710
スタートボタンと
Leaderboardが表示されます

236
00:15:10,077 --> 00:15:16,116
スタートボタンは隠され
得点の初期値を設定します

237
00:15:17,084 --> 00:15:23,657
viewDidLoadに
“はじめから”を呼び出します

238
00:15:23,957 --> 00:15:26,026
入力するとご覧のとおり―

239
00:15:26,126 --> 00:15:31,398
Xcodeは追加できるコードを
自動補完します

240
00:15:31,498 --> 00:15:34,768
今回は “はじめから”で
Enterを押すと―

241
00:15:34,868 --> 00:15:38,272
自動的に追加されます

242
00:15:39,439 --> 00:15:43,477
アプリケーション起動まで
もう少しです

243
00:15:44,077 --> 00:15:48,248
“スタートを押す”の
アクションのメソッドに―

244
00:15:48,348 --> 00:15:50,184
命令文を書きます

245
00:15:51,084 --> 00:15:54,221
“スタートが押された”

246
00:15:54,321 --> 00:15:56,390
スタートボタンを押すと―

247
00:15:56,490 --> 00:16:00,828
毎回 コードがコンソールに
記憶されます

248
00:15:56,490 --> 00:16:00,828
毎回 コードがコンソールに
記憶されます

249
00:16:01,328 --> 00:16:03,297
デバッグエリアは―

250
00:16:03,397 --> 00:16:08,135
中央 四角の下に
線があるボタンで開きます

251
00:16:08,869 --> 00:16:11,672
インスペクタペインは
隠します

252
00:16:11,905 --> 00:16:15,375
いよいよアプリケーションを
起動します

253
00:16:15,876 --> 00:16:20,013
左上のアプリケーション名の
横の矢印は―

254
00:16:20,113 --> 00:16:22,549
iPhone Xを指してます

255
00:16:22,683 --> 00:16:27,754
iPhone Xをクリックすると
シミュレータを選べます

256
00:16:28,055 --> 00:16:32,125
設定はMac用の
シミュレータでしたが―

257
00:16:32,559 --> 00:16:35,062
今回はiPhone Xを選びます

258
00:16:35,162 --> 00:16:38,165
自分のスマホをコンピュータに
接続すると―

259
00:16:38,265 --> 00:16:42,769
自分のスマホで
アプリケーションを起動できます

260
00:16:43,504 --> 00:16:47,374
iPhone Xを選択して
プレイボタンをクリックで

261
00:16:47,474 --> 00:16:52,513
アプリケーションを
シミュレータにビルドできます

262
00:16:57,184 --> 00:16:58,752
ああ　できたわ

263
00:16:59,119 --> 00:17:02,556
スタートボタンを押すと―

264
00:16:59,119 --> 00:17:02,556
スタートボタンを押すと―

265
00:17:02,656 --> 00:17:06,727
スタートを押したログが
コンソールに送られます

266
00:17:07,027 --> 00:17:11,397
たった今 UIを作り
コードを接続できました

267
00:17:11,765 --> 00:17:16,303
ではゲーム論理について
お話ししましょう

268
00:17:18,839 --> 00:17:24,478
ゲームの最初の画面に
ボタンが２つあるはずです

269
00:17:24,578 --> 00:17:27,448
スタートボタンと
Leaderboardボタンです

270
00:17:27,548 --> 00:17:29,817
今はプレイのことだけ
話します

271
00:17:29,917 --> 00:17:32,786
スタートボタンを押すと―

272
00:17:34,087 --> 00:17:37,558
プレイモードになります

273
00:17:37,991 --> 00:17:43,464
初めは絵文字が
ランダムに表示されます

274
00:17:43,564 --> 00:17:45,632
ユニコーンかウンチです

275
00:17:46,300 --> 00:17:49,303
今はユーザが
タップするまで―

276
00:17:49,403 --> 00:17:53,140
タイマーを
１秒に設定しています

277
00:17:54,074 --> 00:17:58,812
１秒以内にユニコーンを
タップしなければ―

278
00:17:58,912 --> 00:18:01,615
ユニコーンは寂しがり
ゲームオーバーです

279
00:17:58,912 --> 00:18:01,615
ユニコーンは寂しがり
ゲームオーバーです

280
00:18:02,483 --> 00:18:07,654
ウンチをタップしなければ
ゲームを続けられます

281
00:18:08,388 --> 00:18:13,861
ゲーム中にボタンを押すと
どうなるでしょうか

282
00:18:14,628 --> 00:18:20,300
ユニコーンを押すと１点獲得し
ゲームを続けられます

283
00:18:20,400 --> 00:18:24,705
ウンチを押してしまうと
ゲームオーバーです

284
00:18:25,305 --> 00:18:27,808
コードの見え方は
どうでしょう

285
00:18:28,141 --> 00:18:30,244
スタート画面で
始まります

286
00:18:30,911 --> 00:18:36,383
メソッドでコードを
論理ブロックに分けます

287
00:18:36,550 --> 00:18:42,689
ただの長いコードではなく
特定の部分が見やすいです

288
00:18:43,423 --> 00:18:49,129
startNewGameが
ゲームを始めるメソッドです

289
00:18:49,229 --> 00:18:53,700
ここでいくつか
ゲーム開始の設定をします

290
00:18:55,869 --> 00:18:57,938
ゲームが始まると―

291
00:18:58,038 --> 00:19:02,142
スタートボタンと
Leaderboardを隠します

292
00:18:58,038 --> 00:19:02,142
スタートボタンと
Leaderboardを隠します

293
00:19:02,609 --> 00:19:06,046
次に“０”の得点ラベルが
出てきます

294
00:19:06,480 --> 00:19:08,448
見た目も変えられます

295
00:19:08,549 --> 00:19:13,120
例えば得点ラベルの色を
コードで変更できます

296
00:19:13,220 --> 00:19:17,224
プレイ中は文字色を
マゼンタに設定します

297
00:19:17,658 --> 00:19:23,630
ゲームを始める設定は完了で
次はプレイの設定です

298
00:19:24,531 --> 00:19:26,433
いいですか？

299
00:19:27,434 --> 00:19:32,139
プレイ中 得点ラベルが
更新されなければなりません

300
00:19:32,239 --> 00:19:38,212
ユニコーンとウンチの
ランダム出現も設定します

301
00:19:38,378 --> 00:19:40,714
このヘルパーメソッドで―

302
00:19:40,814 --> 00:19:44,585
ボタンの位置のxy座標を
ランダムに選びます

303
00:19:45,419 --> 00:19:48,021
タイマーを１秒に設定します

304
00:19:48,689 --> 00:19:55,762
１秒経つと 設定された
コードが呼び出され―

305
00:19:56,897 --> 00:20:03,370
ユニコーンが表示されてたら
ゲームオーバーです

306
00:19:56,897 --> 00:20:03,370
ユニコーンが表示されてたら
ゲームオーバーです

307
00:20:03,470 --> 00:20:06,406
ユニコーンが
寂しがるからです

308
00:20:07,841 --> 00:20:14,014
逆にウンチが表示されてたら
無事に見逃したので続行です

309
00:20:14,982 --> 00:20:18,318
次にボタンを押した時の
設定です

310
00:20:18,619 --> 00:20:21,788
goodbuttonを押すと
点が入ります

311
00:20:23,257 --> 00:20:27,294
タイマーが発動しないよう
無効にして―

312
00:20:27,394 --> 00:20:31,632
ゲームを
続けられるようにします

313
00:20:33,033 --> 00:20:35,035
badbuttonを押すと―

314
00:20:35,135 --> 00:20:39,373
ボタンが消えて
ゲームを続けられなくします

315
00:20:39,606 --> 00:20:43,343
タイマーを無効にして―

316
00:20:43,477 --> 00:20:49,383
“ゲームオーバー”の
メソッドを呼び出します

317
00:20:49,616 --> 00:20:53,187
この論理を
ゲームに追加しましょう

318
00:20:54,421 --> 00:20:59,493
Xcodeプロジェクトを
再度 開きます

319
00:21:00,394 --> 00:21:06,066
Storyboardは使わず
View Controllerを使います

320
00:21:06,166 --> 00:21:09,136
ここでは１画面にして―

321
00:21:09,236 --> 00:21:12,573
プロジェクトナビゲータから
View Controllerを選択

322
00:21:13,207 --> 00:21:17,411
コードはすでに
書いてあるので―

323
00:21:17,511 --> 00:21:22,616
ショートカットを使って
View Controllerに追加します

324
00:21:23,183 --> 00:21:24,985
startNewGameです

325
00:21:25,085 --> 00:21:28,021
スタートボタンと
Leaderboardを隠し―

326
00:21:28,121 --> 00:21:33,026
点数の初期設定をして
ゲームを呼び出します

327
00:21:34,194 --> 00:21:36,396
次はゲームの設定です

328
00:21:37,531 --> 00:21:39,967
得点ラベルの更新―

329
00:21:40,067 --> 00:21:42,970
ボタン表示と
タイマーを設定します

330
00:21:43,737 --> 00:21:49,376
最後にstartNewGameに
コードを接続します

331
00:21:50,510 --> 00:21:56,583
goodbuttonとbadbuttonも
同様です

332
00:21:57,918 --> 00:22:02,022
これでコードはすべて
整いました

333
00:21:57,918 --> 00:22:02,022
これでコードはすべて
整いました

334
00:22:03,290 --> 00:22:07,761
プレイを押すとビルドされ
シミュレータで起動します

335
00:22:10,030 --> 00:22:11,999
緊張するわ

336
00:22:13,333 --> 00:22:14,902
１点 取った

337
00:22:15,903 --> 00:22:18,872
次は？　ウンチが多いわね

338
00:22:20,240 --> 00:22:22,276
１日中やってしまうから―

339
00:22:22,376 --> 00:22:25,679
タヌからLeaderboardの
説明をしてもらいます

340
00:22:26,346 --> 00:22:30,584
ウンチをたたいて
わざと終わらせます

341
00:22:31,151 --> 00:22:33,620
いいでしょうか

342
00:22:34,021 --> 00:22:35,055
ありがとう

343
00:22:35,155 --> 00:22:38,158
(拍手)

344
00:22:38,325 --> 00:22:42,663
30分もかからずに
ゲームを作ったんです

345
00:22:42,763 --> 00:22:45,399
もっと時間があれば？

346
00:22:46,200 --> 00:22:49,303
最初にXcodeの
ナビゲータを学び―

347
00:22:50,537 --> 00:22:56,376
StoryboardでUIを作り
コードを接続しました

348
00:22:56,477 --> 00:22:59,646
最後にSwiftで
論理を書きました

349
00:22:59,746 --> 00:23:01,448
これで30分未満です

350
00:22:59,746 --> 00:23:01,448
これで30分未満です

351
00:23:01,748 --> 00:23:06,220
時間があれば
さらに改造できます

352
00:23:06,653 --> 00:23:09,990
簡素なUI素材を
使いましたが―

353
00:23:10,090 --> 00:23:15,295
SpriteKitで凝ったボタンを
作ることもできます

354
00:23:15,395 --> 00:23:19,500
重力や物理学の要素を
加えてもいいですね

355
00:23:20,200 --> 00:23:25,772
MusicKitを組み込んで
Apple Musicで曲を流したり

356
00:23:26,473 --> 00:23:31,578
ユーザの動きを感知した
スピード調整もできます

357
00:23:31,979 --> 00:23:36,583
過去のWWDCから
お薦めの基調講演３つです

358
00:23:36,783 --> 00:23:39,386
2013年の
Introduction to SpriteKit

359
00:23:39,486 --> 00:23:41,522
昨年から２つ
Introducing MusicKit

360
00:23:41,622 --> 00:23:44,725
Creating Immersive Apps
with Core Motion

361
00:23:45,392 --> 00:23:46,160
ありがとう

362
00:23:46,260 --> 00:23:47,895
次はタヌから―

363
00:23:47,995 --> 00:23:51,298
アプリケーションの
画面追加方法を説明します

364
00:23:51,565 --> 00:23:57,571
(拍手)

365
00:24:05,979 --> 00:24:07,681
おはようございます

366
00:24:08,015 --> 00:24:11,485
ゲーム作りはいかがでしたか

367
00:24:12,653 --> 00:24:14,354
私はタヌ･シンハル

368
00:24:14,454 --> 00:24:19,259
すばらしい機能を
追加しに来ました

369
00:24:19,893 --> 00:24:24,231
iOSで広く
使用されているAPIと―

370
00:24:24,331 --> 00:24:27,401
フレームワークも学びます

371
00:24:28,268 --> 00:24:33,340
まず追加したい機能を
見ていただきます

372
00:24:34,174 --> 00:24:37,110
Leaderboardです

373
00:24:37,211 --> 00:24:42,516
プレイしたユーザの名前と
得点が表示されます

374
00:24:43,517 --> 00:24:49,356
名前をタップすると
ユーザ情報が見られます

375
00:24:51,225 --> 00:24:56,230
今日は３つのメイン領域に
焦点を当てます

376
00:24:56,930 --> 00:24:58,866
１つはデータです

377
00:24:59,600 --> 00:25:04,972
どこにデータを保存し
どうやってそれを呼び出すか

378
00:24:59,600 --> 00:25:04,972
どこにデータを保存し
どうやってそれを呼び出すか

379
00:25:05,839 --> 00:25:08,542
２つ目はUIです

380
00:25:08,876 --> 00:25:13,046
見た目と表示する情報を
どうするか

381
00:25:13,547 --> 00:25:18,919
３つ目はデータの受け渡しや

382
00:25:19,019 --> 00:25:23,624
他のタスクを管理する
論理について説明します

383
00:25:24,958 --> 00:25:28,796
この３つのカテゴリーに
分解すると―

384
00:25:28,896 --> 00:25:34,535
有名なアーキテクチャを
使うことになります

385
00:25:34,635 --> 00:25:36,970
それがMVCです

386
00:25:39,006 --> 00:25:45,045
MVCのMはモデルの意味で
データを指します

387
00:25:45,712 --> 00:25:49,216
V=ビューがUIです

388
00:25:49,516 --> 00:25:52,486
C=コントローラが
論理で―

389
00:25:52,586 --> 00:25:57,057
モデルとビューに
指示を出します

390
00:25:58,158 --> 00:26:02,429
このパターンは似たタスクの
グループ化に役立ち―

391
00:25:58,158 --> 00:26:02,429
このパターンは似たタスクの
グループ化に役立ち―

392
00:26:02,763 --> 00:26:09,636
他の部分に影響を与えずに
変更を加えやすくなります

393
00:26:10,537 --> 00:26:14,775
iOSのコントローラは―

394
00:26:14,875 --> 00:26:18,846
UIViewControllerの
サブクラスを使用します

395
00:26:19,746 --> 00:26:24,484
ビューはUIViewクラスの
サブクラスで―

396
00:26:24,952 --> 00:26:29,790
モデルはNSObjectの
サブクラスです

397
00:26:31,158 --> 00:26:33,193
今日
アプリケーションを作る時

398
00:26:33,293 --> 00:26:38,565
MVCの各パートを
しっかり見ていきます

399
00:26:39,466 --> 00:26:44,338
早速 データを格納する
モデルを作りましょう

400
00:26:46,573 --> 00:26:50,210
ジェシーと作った
先ほどのプロジェクトです

401
00:26:51,311 --> 00:26:56,817
フォルダを右クリックして
New Fileを選択します

402
00:26:57,651 --> 00:27:02,956
iOSで最も多いクラスの
Cocoa Touchクラスを選択

403
00:26:57,651 --> 00:27:02,956
iOSで最も多いクラスの
Cocoa Touchクラスを選択

404
00:27:03,357 --> 00:27:08,295
Nextをクリックして
クラスを入力します

405
00:27:09,596 --> 00:27:15,769
データの親クラスである
NSobjectのサブクラスです

406
00:27:16,437 --> 00:27:19,573
Nextをクリックし
作成します

407
00:27:21,642 --> 00:27:25,746
このクラスでプレイヤーの
情報を保存するため―

408
00:27:26,013 --> 00:27:30,350
以前 書いたコードを
ショートカットで追加します

409
00:27:31,552 --> 00:27:34,521
名前 得点 順位―

410
00:27:34,621 --> 00:27:38,659
さらにユーザ画像の
変数があります

411
00:27:39,493 --> 00:27:44,565
さらにイニシャライザを
データに設定しますが―

412
00:27:44,665 --> 00:27:46,833
それは心配いりません

413
00:27:47,534 --> 00:27:50,370
もう１つクラスを作るので

414
00:27:50,470 --> 00:27:54,875
フォルダを右クリックして
ファイルを追加します

415
00:27:56,076 --> 00:27:59,780
書いておいたゲームデータの
クラスです

416
00:28:02,416 --> 00:28:06,954
クラスに埋め込まれた
メソッドを見ましょう

417
00:28:10,090 --> 00:28:14,428
ネームメソッドに
得点が保存されています

418
00:28:15,495 --> 00:28:20,801
ユーザの合計得点を
保存するのに使います

419
00:28:21,468 --> 00:28:25,439
ランクメソッドが
プレイヤーデータを持ち―

420
00:28:25,539 --> 00:28:31,311
プレイヤーの順位が
分かるようにします

421
00:28:31,912 --> 00:28:38,786
最後に合計のプレイ人数が
分かるようにします

422
00:28:39,887 --> 00:28:44,157
今日は このメソッドの
埋め込み方はやりません

423
00:28:44,658 --> 00:28:47,094
大事なことは―

424
00:28:47,194 --> 00:28:51,832
別々のファイルを作って
データを保存することです

425
00:28:53,000 --> 00:28:57,204
アプリケーションを作る時
データ保存には―

426
00:28:57,304 --> 00:29:03,443
別々のエンティティを作り
UIとは独立させましょう

427
00:28:57,304 --> 00:29:03,443
別々のエンティティを作り
UIとは独立させましょう

428
00:29:03,544 --> 00:29:05,445
今 お見せしたようにです

429
00:29:06,647 --> 00:29:11,552
バックエンドでデータの
保存と取得をするには―

430
00:29:12,152 --> 00:29:14,688
いくつか方法があります

431
00:29:16,390 --> 00:29:18,659
１つはCore Dataを
使う方法で―

432
00:29:19,426 --> 00:29:23,697
ディスクのオブジェクトの
管理に最適です

433
00:29:24,198 --> 00:29:26,500
認証 クエリの生成―

434
00:29:26,600 --> 00:29:30,838
しぼり込み
整頓することができます

435
00:29:32,239 --> 00:29:36,310
ただしデータを
Webサーバに保存し―

436
00:29:36,410 --> 00:29:41,682
NSURLSessionでダウンロード
アップロードが必要です

437
00:29:42,816 --> 00:29:48,155
CloudKitを使いクラウドに
データ保存する手もあります

438
00:29:48,789 --> 00:29:53,794
第三者事業者のクラウドを
使うこともできます

439
00:29:54,161 --> 00:29:56,063
データ設定ができたら―

440
00:29:56,196 --> 00:30:01,502
UIを作るセクションに
移ります

441
00:29:56,196 --> 00:30:01,502
UIを作るセクションに
移ります

442
00:30:02,770 --> 00:30:05,606
Leaderboardの見た目です

443
00:30:06,707 --> 00:30:10,377
画面を分解していきましょう

444
00:30:11,145 --> 00:30:14,548
ナビゲーションバーが
上部にあり―

445
00:30:15,249 --> 00:30:18,352
Table Viewが
その下にあります

446
00:30:18,585 --> 00:30:22,890
Table Viewセルと
呼ばれる行を持ちます

447
00:30:23,423 --> 00:30:27,127
各セルの左に画像があり―

448
00:30:27,227 --> 00:30:32,633
右側にいくつかラベルがあり
文字が表示されています

449
00:30:33,767 --> 00:30:38,338
Leaderboardの他に
詳細ページも必要です

450
00:30:38,906 --> 00:30:41,041
これは実に簡単明瞭で―

451
00:30:41,141 --> 00:30:44,311
画像とラベルです

452
00:30:45,312 --> 00:30:49,216
これでUIのイメージが
つかめたので―

453
00:30:49,383 --> 00:30:55,122
デモ画面を使って
UIの設定をしましょう

454
00:31:01,795 --> 00:31:05,566
ジェシーと作った
Storyboardを選択します

455
00:31:07,067 --> 00:31:10,037
このView Controllerは

456
00:31:10,137 --> 00:31:14,641
ゲームの全画面を
管理するのに使います

457
00:31:15,309 --> 00:31:18,145
画面を増やして―

458
00:31:18,245 --> 00:31:22,049
詳細ビューで
Leaderboardを表示します

459
00:31:22,583 --> 00:31:24,618
オブジェクトライブラリで

460
00:31:24,718 --> 00:31:28,121
View Controllerを
追加します

461
00:31:28,355 --> 00:31:30,424
探してみると―

462
00:31:31,325 --> 00:31:35,162
View Controllerにも
種類があります

463
00:31:35,596 --> 00:31:39,066
Leaderboardを
表にしたいので―

464
00:31:39,166 --> 00:31:44,004
Table View Controllerを
選択します

465
00:31:46,106 --> 00:31:51,111
自動的に
Table Viewになります

466
00:31:51,712 --> 00:31:53,814
Table Viewを選択し

467
00:31:53,914 --> 00:31:57,284
右のAttributesインスペクタを
見ます

468
00:31:57,985 --> 00:32:02,723
Contentタイプを
Dynamic Prototypesから

469
00:31:57,985 --> 00:32:02,723
Contentタイプを
Dynamic Prototypesから

470
00:32:03,156 --> 00:32:05,759
Static Cellsに変更します

471
00:32:06,527 --> 00:32:10,164
Static Cellsは
データ表示に最適で―

472
00:32:10,497 --> 00:32:13,801
Storyboardでの
設定も簡単です

473
00:32:15,035 --> 00:32:17,671
セルを選択し
Attributesインスペクタで

474
00:32:17,805 --> 00:32:22,443
スタイルを
Subtitleに設定します

475
00:32:23,410 --> 00:32:30,017
タイトルと副題ができて
名前と得点を表示できます

476
00:32:30,918 --> 00:32:34,822
行の左に
画像も追加したいと思います

477
00:32:35,389 --> 00:32:39,660
Attributesインスペクタの
画像フィールドで―

478
00:32:39,760 --> 00:32:43,163
画像名を入力するだけです

479
00:32:44,264 --> 00:32:48,936
サンプル画像を
インポートしてあるので―

480
00:32:49,203 --> 00:32:50,771
それを挿入しましょう

481
00:32:51,772 --> 00:32:54,875
これでセルの設定ができて

482
00:32:54,975 --> 00:32:59,146
Leaderboardの
大枠ができました

483
00:32:59,513 --> 00:33:02,850
詳細ページのUIに
移りましょう

484
00:32:59,513 --> 00:33:02,850
詳細ページのUIに
移りましょう

485
00:33:03,083 --> 00:33:06,487
オブジェクトライブラリを
開き―

486
00:33:06,587 --> 00:33:12,359
Blank View Controllerを
挿入します

487
00:33:14,161 --> 00:33:18,832
このView Controllerに
画像を挿入します

488
00:33:21,869 --> 00:33:25,772
Attributesインスペクタで
画像を設定します

489
00:33:27,341 --> 00:33:30,077
縦横比が変ですね

490
00:33:30,244 --> 00:33:35,516
コンテンツのModeを
Aspect Fitに変更します

491
00:33:35,916 --> 00:33:37,251
よくなりました

492
00:33:37,718 --> 00:33:41,788
オブジェクトライブラリから
ラベルを挿入し―

493
00:33:43,791 --> 00:33:46,927
これは名前ラベルにします

494
00:33:47,027 --> 00:33:51,131
コピーして順位ラベルを作り

495
00:33:51,231 --> 00:33:56,837
もう一度コピーして
得点ラベルを作ります

496
00:33:57,404 --> 00:34:02,042
これでView Controllerが
設定できました

497
00:33:57,404 --> 00:34:02,042
これでView Controllerが
設定できました

498
00:34:02,142 --> 00:34:04,144
まだ 設定があります

499
00:34:04,511 --> 00:34:09,049
特定の動作をした時に
Leaderboardか―

500
00:34:09,149 --> 00:34:14,254
詳細ページが
表示されるようにします

501
00:34:14,788 --> 00:34:21,027
Leaderboardボタンを
タップで開きたいので―

502
00:34:21,195 --> 00:34:26,699
View Controllerを
ボタンと接続します

503
00:34:27,201 --> 00:34:30,137
controlキーを押したまま

504
00:34:30,237 --> 00:34:34,708
View Controllerまで
ドラッグします

505
00:34:36,009 --> 00:34:40,714
指を離すとオプションの
メニューが開きます

506
00:34:41,281 --> 00:34:44,685
最初の
View Controllerから

507
00:34:44,784 --> 00:34:48,755
次のView Controllerを
表示する方法です

508
00:34:49,322 --> 00:34:52,159
showを選択します

509
00:34:52,259 --> 00:34:56,129
このようなアプリケーションで
人気のセグエです

510
00:34:56,697 --> 00:35:02,002
２つのView Controllerが
結びつきました

511
00:34:56,697 --> 00:35:02,002
２つのView Controllerが
結びつきました

512
00:35:02,436 --> 00:35:04,405
これがセグエです

513
00:35:05,973 --> 00:35:09,710
次にLeaderboardの
セルのタップで―

514
00:35:09,810 --> 00:35:12,646
詳細を表示させます

515
00:35:12,946 --> 00:35:15,082
またcontrolキーを
押しながら

516
00:35:15,182 --> 00:35:18,619
詳細View Controllerに
ドラッグします

517
00:35:18,719 --> 00:35:20,954
再度showを選びます

518
00:35:22,189 --> 00:35:26,126
やっとアプリケーションを
起動することができます

519
00:35:28,762 --> 00:35:30,397
シミュレータを見ましょう

520
00:35:32,633 --> 00:35:38,639
Leaderboardのタップで
モックアップが見られます

521
00:35:38,972 --> 00:35:45,245
セルをタップすると
詳細ページが表示されました

522
00:35:45,979 --> 00:35:47,581
いいですね

523
00:35:47,748 --> 00:35:52,286
でもLeaderboardや
ゲームに戻れないので―

524
00:35:52,886 --> 00:35:54,488
調整しましょう

525
00:35:56,323 --> 00:36:01,929
メインの
View Controllerを選び

526
00:35:56,323 --> 00:36:01,929
メインの
View Controllerを選び

527
00:36:02,462 --> 00:36:05,365
XcodeのEditorメニューを
開きます

528
00:36:05,466 --> 00:36:09,236
embed inの
Navigation Controllerで

529
00:36:10,938 --> 00:36:14,541
Navigation Controllerを
アプリケーションに追加します

530
00:36:15,008 --> 00:36:19,079
複数の
View Controllerを―

531
00:36:19,179 --> 00:36:25,185
行ったり来たりできる
コントローラです

532
00:36:26,019 --> 00:36:31,625
上部にナビゲーションバーも
表示されます

533
00:36:31,992 --> 00:36:35,696
Attributesインスペクタで
Leaderboardに―

534
00:36:35,796 --> 00:36:41,368
見出しを付けると
バーに表示されます

535
00:36:43,170 --> 00:36:48,008
これでUIに必要な画面は
挿入しました

536
00:36:48,642 --> 00:36:53,847
アプリケーションの
アイコンを追加して完成です

537
00:36:54,314 --> 00:37:00,053
プロジェクトナビゲータの
Assetsを選択し―

538
00:36:54,314 --> 00:37:00,053
プロジェクトナビゲータの
Assetsを選択し―

539
00:37:01,054 --> 00:37:03,924
アイコン画像セットを
開きます

540
00:37:04,792 --> 00:37:08,362
デザイナーが作った
アイコンです

541
00:37:08,662 --> 00:37:12,900
これを選択して
Xcodeにドロップします

542
00:37:14,935 --> 00:37:18,539
このアイコン作成には
特殊な方法があり―

543
00:37:18,639 --> 00:37:22,009
developer.apple.comに
ガイドラインがあります

544
00:37:23,043 --> 00:37:25,245
アプリケーションを
起動したら…

545
00:37:26,046 --> 00:37:27,347
これは閉じて…

546
00:37:27,481 --> 00:37:31,385
ホーム画面に
アイコンを表示させます

547
00:37:31,585 --> 00:37:32,786
かわいいでしょ

548
00:37:33,086 --> 00:37:36,457
(拍手)

549
00:37:36,623 --> 00:37:37,824
ありがとう

550
00:37:37,925 --> 00:37:42,562
アプリケーションで
Leaderboardをタップします

551
00:37:43,730 --> 00:37:48,268
今回はすべての画面を
行き来できます

552
00:37:48,669 --> 00:37:49,903
いいですね

553
00:37:50,304 --> 00:37:51,238
次は…

554
00:37:51,338 --> 00:37:52,105
(拍手)

555
00:37:52,206 --> 00:37:53,207
ありがとうございます

556
00:37:54,575 --> 00:37:57,444
次はスマホの向きを変えます

557
00:37:58,245 --> 00:38:01,882
ラベルが切れてしまい―

558
00:37:58,245 --> 00:38:01,882
ラベルが切れてしまい―

559
00:38:01,982 --> 00:38:05,118
画像が左寄りに
なっています

560
00:38:05,419 --> 00:38:09,723
きれいなレイアウトに
するため戻ります

561
00:38:09,990 --> 00:38:13,594
Auto Layoutという
技術を使います

562
00:38:14,528 --> 00:38:18,065
画面をどのように構成するか

563
00:38:18,165 --> 00:38:22,803
ルールを
定義することができます

564
00:38:23,804 --> 00:38:28,775
このルールのことを
制約と呼びます

565
00:38:29,309 --> 00:38:35,048
詳細ページの画像の
制約を定義します

566
00:38:36,083 --> 00:38:40,688
Storyboardの右下を
見てください

567
00:38:41,255 --> 00:38:46,427
２本の横棒が並んでいる
Alignボタンをクリックします

568
00:38:46,527 --> 00:38:49,363
Horizontally in Containerを
選択し―

569
00:38:49,830 --> 00:38:51,598
Add 1 constraintをクリック

570
00:38:52,232 --> 00:38:58,305
画像ビューは常に
水平方向に中央になります

571
00:38:59,239 --> 00:39:01,775
Alignボタン横の―

572
00:38:59,239 --> 00:39:01,775
Alignボタン横の―

573
00:39:01,875 --> 00:39:05,446
Add New Constraintsを
クリックします

574
00:39:06,613 --> 00:39:11,919
画像ビューと近くの素材との

575
00:39:12,019 --> 00:39:16,089
距離関係を設定します

576
00:39:16,523 --> 00:39:20,027
画像ビューは
最も近い素材から―

577
00:39:20,127 --> 00:39:24,365
少なくとも10ポイント分
距離を置くとします

578
00:39:24,465 --> 00:39:29,803
この場合 画面の端からの
距離が設定できます

579
00:39:30,437 --> 00:39:33,307
横幅と高さも設定します

580
00:39:38,946 --> 00:39:43,550
Auto Layoutを使って
画像ビューを設定しました

581
00:39:43,784 --> 00:39:47,688
ラベルにも似た制約を
定義します

582
00:39:47,988 --> 00:39:51,759
同時に選択すれば
一度に定義できます

583
00:39:55,396 --> 00:39:59,166
アプリケーションを起動して
画面を横置きしても―

584
00:39:59,266 --> 00:40:03,437
適切にレイアウトが
表示されるようにします

585
00:39:59,266 --> 00:40:03,437
適切にレイアウトが
表示されるようにします

586
00:40:03,971 --> 00:40:07,674
簡単にレイアウトを
確認できます

587
00:40:08,042 --> 00:40:13,614
Storyboard左下の
device configuration paneで

588
00:40:14,381 --> 00:40:17,985
向きを横置きに変更します

589
00:40:19,052 --> 00:40:23,624
これで画面が
横置きになりました

590
00:40:23,957 --> 00:40:27,327
画像が中央にあり―

591
00:40:27,427 --> 00:40:31,298
ラベルも同じページに
表示されています

592
00:40:32,366 --> 00:40:36,837
device configurationで
デバイスを変えて―

593
00:40:36,937 --> 00:40:41,375
iPadなど サイズ違いの
見え方も確認できます

594
00:40:42,976 --> 00:40:46,246
UIの設定が完了しました

595
00:40:47,047 --> 00:40:51,518
このセクションを
簡単におさらいします

596
00:40:53,887 --> 00:40:56,790
Single View Controllerは

597
00:40:56,890 --> 00:41:01,094
ゲーム画面全体の
管理に使います

598
00:40:56,890 --> 00:41:01,094
ゲーム画面全体の
管理に使います

599
00:41:01,762 --> 00:41:05,499
多重View Controllerで

600
00:41:05,599 --> 00:41:08,735
複数画面を表示できます

601
00:41:09,970 --> 00:41:13,106
複数の画面を作成した場合

602
00:41:13,340 --> 00:41:20,380
コントローラ間の行き来を
iOSに指示します

603
00:41:20,914 --> 00:41:25,986
セグエでこの遷移を
定義しました

604
00:41:27,254 --> 00:41:33,060
Table View Controllerは
リスト表示に最適です

605
00:41:34,127 --> 00:41:38,065
Navigation Controllerを
追加しました

606
00:41:38,632 --> 00:41:41,101
Table View画面と―

607
00:41:41,201 --> 00:41:46,206
詳細ページを行き来するのに
使いました

608
00:41:47,141 --> 00:41:51,979
Navigation Controllerと
Table Viewのパターンは

609
00:41:52,079 --> 00:41:55,449
iOSアプリケーションで
よく見られます

610
00:41:55,716 --> 00:41:57,718
これは一例です

611
00:41:59,920 --> 00:42:02,122
View Controllerを
学ぶには―

612
00:41:59,920 --> 00:42:02,122
View Controllerを
学ぶには―

613
00:42:02,222 --> 00:42:06,226
developer.apple.comを
ご覧ください

614
00:42:07,094 --> 00:42:09,763
Auto Layoutも学びました

615
00:42:09,863 --> 00:42:13,934
異なる画面サイズや
異なる向きに対する―

616
00:42:14,034 --> 00:42:17,671
UIの設定ができる
すばらしい技術です

617
00:42:17,938 --> 00:42:23,977
詳しくはWWDCの過去の
基調講演をご覧ください

618
00:42:24,912 --> 00:42:31,218
最後にUIとデータモデルを
接続して―

619
00:42:31,318 --> 00:42:34,955
すべてを結び付けました

620
00:42:35,289 --> 00:42:37,958
またデモを見てみましょう

621
00:42:41,495 --> 00:42:45,198
ゲームを終える際は
必ずスコアを保存しましょう

622
00:42:45,632 --> 00:42:51,038
まずView Controllerを
選択します

623
00:42:52,372 --> 00:42:54,708
先ほど書いた―

624
00:42:55,409 --> 00:42:59,079
ゲームオーバーメソッドです

625
00:42:59,179 --> 00:43:01,982
ここに保存する
メソッドを呼びます

626
00:42:59,179 --> 00:43:01,982
ここに保存する
メソッドを呼びます

627
00:43:03,584 --> 00:43:08,122
２つのパラメータを使います

628
00:43:08,455 --> 00:43:14,495
１つは得点変数で保存した
合計得点です

629
00:43:15,596 --> 00:43:20,467
２つ目のパラメータは
ユーザの名前です

630
00:43:20,567 --> 00:43:23,904
先ほど作った
View Controllerの―

631
00:43:24,004 --> 00:43:27,708
コードを少し変更します

632
00:43:28,642 --> 00:43:34,114
得点保存メソッドは
２つのパラメータが必要です

633
00:43:34,314 --> 00:43:39,953
１つは変数で保存される
ゲーム得点です

634
00:43:40,554 --> 00:43:46,560
２つ目はユーザの名前です

635
00:43:47,694 --> 00:43:52,833
実際のアプリケーションでは
名前を入力できるように―

636
00:43:52,933 --> 00:43:57,071
設定画面が
必要になるでしょう

637
00:43:57,438 --> 00:44:02,743
今はデモなので名前を
ハードコード化しておきます

638
00:43:57,438 --> 00:44:02,743
今はデモなので名前を
ハードコード化しておきます

639
00:44:04,044 --> 00:44:08,015
得点を保存できたら
Leaderboardに―

640
00:44:08,115 --> 00:44:14,321
正しく表示されるように
コードを書きます

641
00:44:14,588 --> 00:44:17,624
ユニコーンのフォルダを
右クリックし―

642
00:44:17,724 --> 00:44:23,030
他のクラス作成で
New Fileを選択します

643
00:44:23,764 --> 00:44:25,699
またCocoa Touchです

644
00:44:27,034 --> 00:44:30,804
UITableViewControlleの
サブクラスです

645
00:44:31,505 --> 00:44:35,442
Leaderboardを作った時に
やりましたね

646
00:44:35,542 --> 00:44:38,011
Table View controller
なので―

647
00:44:38,112 --> 00:44:44,451
Table View controllerクラスに
コードを書きます

648
00:44:45,118 --> 00:44:48,922
Leaderboard View Controllerと
名付けます

649
00:44:49,723 --> 00:44:52,326
Nextをクリックし作成します

650
00:44:56,163 --> 00:45:01,168
これはXcodeが
生成してくれたコードです

651
00:44:56,163 --> 00:45:01,168
これはXcodeが
生成してくれたコードです

652
00:45:01,501 --> 00:45:05,572
Table View Controllerを
設計する時

653
00:45:05,672 --> 00:45:08,375
役立つメソッドです

654
00:45:08,976 --> 00:45:11,979
このメソッドを２つ
組み込みました

655
00:45:12,546 --> 00:45:17,317
１つはセクションの行数です

656
00:45:17,885 --> 00:45:22,422
Table Viewを
何行で作りたいのか―

657
00:45:22,523 --> 00:45:25,225
確認してくるメソッドです

658
00:45:25,893 --> 00:45:29,096
今回の行数は―

659
00:45:29,196 --> 00:45:33,267
プレイヤーの合計数と
同数です

660
00:45:34,301 --> 00:45:38,205
情報はデータモデルから
呼び出します

661
00:45:39,139 --> 00:45:44,077
プレイヤー数の変数が
行数になります

662
00:45:45,312 --> 00:45:51,418
２つ目のメソッドは
cellForRowAtIndexPathです

663
00:45:52,753 --> 00:45:54,888
このメソッドは―

664
00:45:54,988 --> 00:46:00,194
Leaderboardに
セルを表示する際に使います

665
00:45:54,988 --> 00:46:00,194
Leaderboardに
セルを表示する際に使います

666
00:46:00,694 --> 00:46:03,063
引数indexPathで―

667
00:46:03,163 --> 00:46:07,968
テーブルの何番目を
表示するか決まります

668
00:46:08,769 --> 00:46:14,641
コメントに記載のとおりに
セルを設定するので―

669
00:46:15,375 --> 00:46:19,646
このセルの設定に使う
コードを呼び出します

670
00:46:20,480 --> 00:46:23,350
ゲームデータクラスを使い

671
00:46:23,784 --> 00:46:28,722
indexPath.rowで
順位が分かります

672
00:46:28,822 --> 00:46:32,025
昇順でプレイヤーを
表示させます

673
00:46:32,659 --> 00:46:34,695
順位が分かれば―

674
00:46:34,795 --> 00:46:39,199
ゲームデータクラスに
プレイヤーデータを送ります

675
00:46:39,299 --> 00:46:41,902
すると情報が得られます

676
00:46:42,803 --> 00:46:46,673
情報を元に
セルの設定をします

677
00:46:47,241 --> 00:46:53,046
文字ラベルは見出し
詳細文字ラベルは副題―

678
00:46:53,247 --> 00:46:56,950
画像ビューには
写真が入ります

679
00:46:57,818 --> 00:47:00,788
クラスの先頭に持ってくれば

680
00:46:57,818 --> 00:47:00,788
クラスの先頭に持ってくれば

681
00:47:00,888 --> 00:47:05,058
ゲームデータインスタンスを
再利用できます

682
00:47:06,060 --> 00:47:10,230
セクションメソッドが
自動生成されますが―

683
00:47:10,330 --> 00:47:13,233
今日は不要なので削除します

684
00:47:14,401 --> 00:47:17,438
Leaderboard用の
コードを書いたので―

685
00:47:17,538 --> 00:47:22,509
メインのStoryboardを
見てみましょう

686
00:47:23,444 --> 00:47:27,047
縦置きに戻して
ちゃんと見てみます

687
00:47:30,718 --> 00:47:35,422
Leaderboard用のコードは
作りたてのクラスにあると

688
00:47:35,522 --> 00:47:38,859
Xcodeに
伝える必要があります

689
00:47:39,359 --> 00:47:43,931
Leaderboard用の
View Controllerを選択し

690
00:47:44,431 --> 00:47:47,134
Identityインスペクタを
開きます

691
00:47:47,234 --> 00:47:51,205
ここでクラスネームを
変更します

692
00:47:52,606 --> 00:47:57,744
Storyboardで
Table Viewを選択します

693
00:47:58,078 --> 00:48:00,647
Attributesインスペクタへ
行き―

694
00:47:58,078 --> 00:48:00,647
Attributesインスペクタへ
行き―

695
00:48:00,748 --> 00:48:04,418
content typeを
Dynamic Prototypesにします

696
00:48:06,020 --> 00:48:12,426
セルがコードによって
動的に生成されるのです

697
00:48:13,827 --> 00:48:16,730
セルの選択もします

698
00:48:19,266 --> 00:48:24,271
Attributesインスペクタの
識別子は―

699
00:48:24,371 --> 00:48:27,908
コピーして再利用します

700
00:48:28,008 --> 00:48:31,812
cellForRowAtIndexPathの
識別子です

701
00:48:32,946 --> 00:48:39,186
Table Viewのセルを
再利用すると伝えて―

702
00:48:39,620 --> 00:48:43,123
パフォーマンスを
改善するのです

703
00:48:45,526 --> 00:48:49,363
最後にLeaderboard
クラスのコードを書きました

704
00:48:49,830 --> 00:48:53,400
詳細View Controllerの
コードも要ります

705
00:48:56,270 --> 00:49:01,642
幸いコードは追加済みなので
そこからインポートします

706
00:48:56,270 --> 00:49:01,642
幸いコードは追加済みなので
そこからインポートします

707
00:49:03,544 --> 00:49:06,113
これが
詳細View Controllerです

708
00:49:07,381 --> 00:49:09,983
Jump Barから飛びます

709
00:49:11,151 --> 00:49:17,558
詳細ページにいくつか
IBOutletがあります

710
00:49:18,125 --> 00:49:24,698
ゲームを書いた時
Storyboardに接続しました

711
00:49:25,132 --> 00:49:27,668
しかし今はできません

712
00:49:28,268 --> 00:49:34,641
Xcodeにコードはここだと
伝えていないからです

713
00:49:35,008 --> 00:49:38,145
Identityインスペクタを
再度開き―

714
00:49:38,245 --> 00:49:41,648
クラスネームを
詳細View Controllerに変えます

715
00:49:42,583 --> 00:49:45,986
これでIBOutletに
接続できます

716
00:49:52,259 --> 00:49:56,930
これでviewLoadメソッドと
同じ操作を―

717
00:49:57,031 --> 00:50:00,667
コードから画面に
設定できます

718
00:49:57,031 --> 00:50:00,667
コードから画面に
設定できます

719
00:50:01,335 --> 00:50:04,004
Main.storyboardを
少し隠します

720
00:50:05,472 --> 00:50:08,942
プレイヤー情報の変数です

721
00:50:09,543 --> 00:50:13,881
プレイヤー情報を
画面に設定します

722
00:50:14,748 --> 00:50:19,853
ユーザ情報を
送ってないのに―

723
00:50:20,087 --> 00:50:22,356
“どこからデータ取得を？”

724
00:50:23,056 --> 00:50:28,962
タップされた人について
Leaderboardに聞くのです

725
00:50:29,396 --> 00:50:32,499
Leaderboardに戻り―

726
00:50:32,599 --> 00:50:37,838
誰の情報を表示するか
確認します

727
00:50:38,438 --> 00:50:41,008
Leaderboard
View Controllerへ移動

728
00:50:41,775 --> 00:50:46,480
クラスの最後に
Xcodeが生成した―

729
00:50:46,580 --> 00:50:50,918
prepareForSegue
メソッドがあります

730
00:50:51,685 --> 00:50:58,225
View Controller間の
画面遷移が行われます

731
00:50:59,259 --> 00:51:04,932
Table Viewでセルを
タップすると反応します

732
00:50:59,259 --> 00:51:04,932
Table Viewでセルを
タップすると反応します

733
00:51:05,833 --> 00:51:12,339
順位を元にプレイヤー情報を
ここに呼び出します

734
00:51:12,706 --> 00:51:15,375
順位が分かるのは―

735
00:51:15,476 --> 00:51:20,180
indexPathForSelectedRowの
おかげです

736
00:51:21,014 --> 00:51:25,352
選択したセルの行番号を
指示してくれます

737
00:51:26,453 --> 00:51:30,257
メソッドでセグエパラメータを
取得します

738
00:51:30,657 --> 00:51:34,094
View Controllerに
セグエが接続しているので

739
00:51:34,428 --> 00:51:37,131
セグエのプロパティが―

740
00:51:37,231 --> 00:51:41,168
どの画面に出力するかを
教えてくれます

741
00:51:41,869 --> 00:51:48,142
行き先となる詳細ページの
インスタンスがあれば―

742
00:51:48,242 --> 00:51:52,780
プレイヤー情報を
データから設定します

743
00:51:53,580 --> 00:51:57,651
最後にアプリケーションを
起動して

744
00:51:57,751 --> 00:52:00,053
仕上がりを見てみましょう

745
00:51:57,751 --> 00:52:00,053
仕上がりを見てみましょう

746
00:52:01,789 --> 00:52:03,524
ではスタートです

747
00:52:04,758 --> 00:52:10,931
Leaderboardを開くと
情報が表示されています

748
00:52:11,331 --> 00:52:16,870
(拍手)

749
00:52:17,404 --> 00:52:20,340
私は１点だから最後かしら

750
00:52:20,440 --> 00:52:22,576
順位を見てみましょう

751
00:52:23,177 --> 00:52:24,878
11位は まあまあね

752
00:52:24,978 --> 00:52:27,181
アプリケーションは
ばっちりね

753
00:52:29,449 --> 00:52:34,121
アプリケーションができたので
次のステップへ進みます

754
00:52:35,155 --> 00:52:38,759
リリース前の
テストが大切です

755
00:52:39,359 --> 00:52:43,263
完了試験フレームワークは
ユニットテストに使われます

756
00:52:44,665 --> 00:52:48,235
App Store Review
ガイドラインも大事で―

757
00:52:48,602 --> 00:52:53,807
ユーザとデベロッパの
双方のためのものです

758
00:52:54,975 --> 00:52:59,680
Apple Developer Programに
登録も必要です

759
00:53:00,147 --> 00:53:06,720
配布に必要な証明書と
プロファイルを発行して―

760
00:53:07,888 --> 00:53:11,091
ようやく
アプリケーション審査へ

761
00:53:11,725 --> 00:53:13,093
承認されたら―

762
00:53:13,193 --> 00:53:17,965
みんなにアプリケーションの
宣伝をしましょう

763
00:53:18,632 --> 00:53:23,036
次のステップについて
WWDCアプリケーションで―

764
00:53:23,136 --> 00:53:27,041
resourcesセクションを
ご覧ください

765
00:53:28,042 --> 00:53:32,913
ぜひXcodeを
使ってみてください

766
00:53:33,213 --> 00:53:38,519
iOS開発に役立つツールと
テンプレートが満載です

767
00:53:39,820 --> 00:53:44,425
Storyboardを使えば
UI設定も簡単です

768
00:53:44,525 --> 00:53:48,562
様々な画面で
アプリケーションを試してください

769
00:53:50,063 --> 00:53:54,568
どのデータが必要で
何を保存するのかよく考えて

770
00:53:56,537 --> 00:54:01,441
すべての端末で
使いやすいことが大切です

771
00:53:56,537 --> 00:54:01,441
すべての端末で
使いやすいことが大切です

772
00:54:01,742 --> 00:54:05,579
古いサイズでも動作するよう
最適化し―

773
00:54:05,679 --> 00:54:08,749
スクリーンのサイズ違いにも
対応しましょう

774
00:54:10,517 --> 00:54:14,988
ガイドラインと事例を
参考にしてください

775
00:54:15,889 --> 00:54:17,891
このとおりにすれば―

776
00:54:17,991 --> 00:54:22,663
おめでとう
あなたもデベロッパです

777
00:54:22,763 --> 00:54:24,898
楽しんでください

778
00:54:24,998 --> 00:54:26,166
(拍手)