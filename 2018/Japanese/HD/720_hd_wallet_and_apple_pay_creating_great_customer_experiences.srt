
1
00:00:07,007 --> 00:00:16,550
(音楽)

2
00:00:21,255 --> 00:00:26,159
(拍手)

3
00:00:26,360 --> 00:00:27,728
ようこそ

4
00:00:27,961 --> 00:00:31,331
ソフトウェア技術者の
ベン･チェスターです

5
00:00:31,498 --> 00:00:37,504
WalletとApple Payによる
優れた顧客体験の構築について

6
00:00:37,905 --> 00:00:42,509
４つの題目と
効果的なデモで説明します

7
00:00:44,278 --> 00:00:48,048
１つ目に 昨年の発表の
ポイントに触れ

8
00:00:48,916 --> 00:00:49,750
２つ目に―

9
00:00:49,983 --> 00:00:55,088
優れた顧客体験を提供する
新機能をご紹介します

10
00:00:55,689 --> 00:00:58,759
３つ目は パスを最大限に
活用する方法です

11
00:00:59,026 --> 00:01:03,497
デザインや
機能の変更点も紹介します

12
00:00:59,026 --> 00:01:03,497
デザインや
機能の変更点も紹介します

13
00:01:04,331 --> 00:01:07,901
最後は デジタルの先の
フィジカルコマースについて

14
00:01:08,068 --> 00:01:14,274
Apple Parkでの
日々の体験を例に話します

15
00:01:14,842 --> 00:01:17,477
まず　Apple Pay Cashから
始めましょう

16
00:01:18,445 --> 00:01:24,218
これは iMessageを使って
簡単に個人間送金ができ

17
00:01:24,484 --> 00:01:28,355
お店やApp上
ウェブ上でも支払えます

18
00:01:28,522 --> 00:01:29,990
ただし 米国のみです

19
00:01:30,724 --> 00:01:32,259
ここで大事なのは

20
00:01:32,559 --> 00:01:37,197
Discoverデビットを
Appに登録すること

21
00:01:37,464 --> 00:01:39,399
それで準備完了です

22
00:01:40,534 --> 00:01:44,404
昨年 発表した
もう１つの優れた機能は

23
00:01:44,538 --> 00:01:46,106
インラインの設定です

24
00:01:46,807 --> 00:01:51,044
つまり カードを登録していない
ユーザでも

25
00:01:51,144 --> 00:01:54,014
１ステップで購入に戻れます

26
00:01:54,481 --> 00:01:59,553
Apple Payボタンを
表示させるだけでいいのです

27
00:02:00,187 --> 00:02:01,788
カードのないユーザには

28
00:02:01,889 --> 00:02:05,058
“Apple Payを設定”ボタンが
あれば

29
00:02:05,158 --> 00:02:07,361
操作が簡単になります

30
00:02:07,861 --> 00:02:09,530
そのボタンをタップすると

31
00:02:09,863 --> 00:02:12,566
App内に手順が出てきます

32
00:02:12,699 --> 00:02:18,739
ユーザが途中で退出してしまう
“離脱”を防げます

33
00:02:19,540 --> 00:02:22,643
必要な作業は これだけです

34
00:02:24,077 --> 00:02:27,948
一度カードが登録されれば
ユーザは購入を再開できます

35
00:02:28,382 --> 00:02:31,652
しかもカードはSMS経由で
自動的に有効になり

36
00:02:32,519 --> 00:02:36,123
全てが手入力より迅速です

37
00:02:36,390 --> 00:02:40,460
ぜひこの機能を
取り入れてみてください

38
00:02:41,728 --> 00:02:44,031
他に昨年 発表した機能は

39
00:02:44,264 --> 00:02:49,536
迅速な購入手続きを促す
エラーハンドリングです

40
00:02:50,871 --> 00:02:55,375
シートの致命的でないエラーを
制御できます

41
00:02:55,642 --> 00:03:02,049
請求や配送先情報の問題点に対して
個々のエラーメッセージを出せます

42
00:02:55,642 --> 00:03:02,049
請求や配送先情報の問題点に対して
個々のエラーメッセージを出せます

43
00:03:02,516 --> 00:03:09,156
ユーザの購入が中断されず
コンバージョン率が向上します

44
00:03:10,157 --> 00:03:15,729
エラーハンドリングのコツは
あいまいなデータがあると

45
00:03:15,829 --> 00:03:17,798
想定することです

46
00:03:18,365 --> 00:03:23,604
ユーザは同じ情報を
多くのAppで使い回します

47
00:03:23,804 --> 00:03:29,476
個々のビジネスロジックに
無理に従わせようとすれば

48
00:03:30,010 --> 00:03:32,713
再入力が必要になります

49
00:03:33,180 --> 00:03:37,484
それは コンバージョン率の
低下につながります

50
00:03:37,951 --> 00:03:41,321
その代わりに
入力項目の幅を広げます

51
00:03:41,421 --> 00:03:43,590
例えば
９桁の郵便番号などで

52
00:03:44,658 --> 00:03:49,463
州や市を推測できるように
するのです

53
00:03:50,264 --> 00:03:54,668
さらに昨年は
新たに導入国が増えました

54
00:03:55,202 --> 00:03:57,504
これは昨年のスライドです

55
00:03:58,105 --> 00:04:01,508
今年は この国々に
６カ国追加されます

56
00:03:58,105 --> 00:04:01,508
今年は この国々に
６カ国追加されます

57
00:04:02,509 --> 00:04:05,412
ノルウェー ポーランドも
追加予定です

58
00:04:05,979 --> 00:04:10,951
中でも特に注目すべき国は
中国です

59
00:04:12,452 --> 00:04:15,489
今年
エクスプレスカードを導入し

60
00:04:15,956 --> 00:04:18,926
北京と上海でも
交通系カードを発表

61
00:04:19,091 --> 00:04:24,131
Walletからカードを購入後
すぐに使用できます

62
00:04:25,065 --> 00:04:27,634
しかも移動は
中国国内だけでなく―

63
00:04:28,101 --> 00:04:30,771
クレジットカードが
使用できる限り

64
00:04:30,871 --> 00:04:34,608
Apple Payでモスクワや
ロンドンにも行けます

65
00:04:35,642 --> 00:04:37,778
ここまでが昨年の機能です

66
00:04:38,011 --> 00:04:41,148
では 優れた
顧客体験についてです

67
00:04:42,316 --> 00:04:45,486
Apple Payでの
優れた体験とは何か？

68
00:04:46,787 --> 00:04:51,992
まず ユーザの購入手続きを
より簡単にする―

69
00:04:52,092 --> 00:04:53,660
アップストリーム化です

70
00:04:54,828 --> 00:04:58,632
次に 支払いをより
迅速にするための

71
00:04:58,732 --> 00:05:00,467
デフォルト化です

72
00:04:58,732 --> 00:05:00,467
デフォルト化です

73
00:05:01,101 --> 00:05:05,305
そして Apple Payのフローを
より明快にするのが―

74
00:05:05,405 --> 00:05:06,940
合理化です

75
00:05:07,708 --> 00:05:11,245
まず 合理化から
説明しましょう

76
00:05:12,379 --> 00:05:14,681
こちらが良い例です

77
00:05:14,781 --> 00:05:18,452
Apple Payボタンが
商品のページにあるので

78
00:05:18,552 --> 00:05:23,857
ユーザの操作を
できる限りシンプルにできます

79
00:05:24,658 --> 00:05:29,263
ただし 複数の商品を
購入したい場合は

80
00:05:29,696 --> 00:05:34,368
ボタンが商品ページにあると
不便かもしれません

81
00:05:34,601 --> 00:05:37,204
そこで役立つのが
Express Checkoutです

82
00:05:38,138 --> 00:05:42,643
この例では 支払いは
買い物かごからですが

83
00:05:43,010 --> 00:05:46,647
どこからでも
可能にするべきです

84
00:05:47,347 --> 00:05:49,850
この２つを組み合わせて

85
00:05:50,617 --> 00:05:53,353
最良の結果を導いてください

86
00:05:55,322 --> 00:05:57,191
Apple Payボタンは

87
00:05:57,291 --> 00:06:00,327
SDK配布のものを
使用してください

88
00:05:57,291 --> 00:06:00,327
SDK配布のものを
使用してください

89
00:06:00,694 --> 00:06:01,828
理由を話します

90
00:06:02,963 --> 00:06:05,866
デバイスの言語が
ローカライズされており

91
00:06:06,233 --> 00:06:08,735
スタイルや色も豊富です

92
00:06:09,570 --> 00:06:12,139
対応デバイスの全てに
拡張が可能で―

93
00:06:12,472 --> 00:06:16,610
今後の更新機能も
無料で入手できます

94
00:06:17,845 --> 00:06:20,647
SDKはiOS 8.3に―

95
00:06:20,747 --> 00:06:24,785
WebKit 10.1はiOSと
macOS 10.12.1に対応しています

96
00:06:25,919 --> 00:06:29,389
皆さんのニーズに
広く応えられるよう―

97
00:06:29,656 --> 00:06:34,294
今日はiOS 12の
新しいボタンを発表します

98
00:06:35,963 --> 00:06:38,532
まず
Book with Apple Payです

99
00:06:38,699 --> 00:06:43,804
ホテルや相乗りサービスの
予約に最適です

100
00:06:44,505 --> 00:06:47,441
使用するには
“Book”を渡します

101
00:06:49,343 --> 00:06:52,479
次に
Subscribe with Apple Payです

102
00:06:53,046 --> 00:06:55,349
これは定期購入向けです

103
00:06:55,749 --> 00:06:57,251
“Subscribe”を渡します

104
00:06:59,119 --> 00:07:01,555
３つ目は
Check out with Apple Payです

105
00:06:59,119 --> 00:07:01,555
３つ目は
Check out with Apple Payです

106
00:07:02,022 --> 00:07:06,627
同ページに複数の
照会先がある場合に最適で

107
00:07:07,394 --> 00:07:12,866
どれがApple Payでの
支払いか明確です

108
00:07:14,468 --> 00:07:16,570
変更点は まだあります

109
00:07:17,070 --> 00:07:20,274
Appleは曲線を よく使います

110
00:07:20,407 --> 00:07:23,210
しかし 皆さんの好みに
合わせられるよう

111
00:07:23,710 --> 00:07:27,614
ボタンの角を
編集できるようにしました

112
00:07:28,982 --> 00:07:34,188
ウェブサイトなどの
イメージに合わせられます

113
00:07:35,756 --> 00:07:39,293
尖った角にする場合
半径を０にします

114
00:07:40,494 --> 00:07:43,797
入力しなければ元のままです

115
00:07:44,698 --> 00:07:46,767
旧バージョンでは

116
00:07:46,867 --> 00:07:51,972
数値を入れても現在の状態に
フォールバックします

117
00:07:54,474 --> 00:07:59,246
角の編集はiOS 12で可能で
今後のWebKitでも使用できます

118
00:08:00,080 --> 00:08:03,517
未対応バージョンでは
フォールバックします

119
00:08:03,617 --> 00:08:06,086
カスケードを
考慮してください

120
00:08:07,187 --> 00:08:11,625
新機能により 商品の購入が
よりスムーズになります

121
00:08:12,392 --> 00:08:17,264
Apple Payボタンの配置で
購入は より簡単になり

122
00:08:17,798 --> 00:08:23,704
“ゲスト購入”との組み合わせで
効果は倍増します

123
00:08:25,105 --> 00:08:30,344
ユーザの初めての体験を
想像してみてください

124
00:08:30,944 --> 00:08:36,383
初回購入を妨げることは
離脱につながると話しました

125
00:08:38,150 --> 00:08:42,556
ユーザは自分の意志で
アカウントを作るべきです

126
00:08:43,357 --> 00:08:46,193
Apple Payは
それをかなえます

127
00:08:46,693 --> 00:08:52,166
シートの購入後のデータを使えば
作成が簡単になります

128
00:08:52,599 --> 00:08:54,201
例を見せましょう

129
00:08:55,569 --> 00:09:01,174
購入完了後の確認画面で
アカウント作成が提案されています

130
00:08:55,569 --> 00:09:01,174
購入完了後の確認画面で
アカウント作成が提案されています

131
00:09:01,642 --> 00:09:05,012
取引したEメールアドレスが
使われるので

132
00:09:05,112 --> 00:09:08,882
後はパスワードを
入力するだけです

133
00:09:09,883 --> 00:09:15,889
“自動入力”と iOS 12の
新機能を使えば簡単です

134
00:09:18,192 --> 00:09:20,060
以上が
アップストリーム化です

135
00:09:20,427 --> 00:09:23,263
次は
デフォルト化についてです

136
00:09:26,033 --> 00:09:31,104
Apple Payは すぐに
探せることが重要なので

137
00:09:31,839 --> 00:09:37,177
デフォルトオプションに
設定しておきましょう

138
00:09:37,744 --> 00:09:43,317
Apple Payには
最新の顧客情報があります

139
00:09:44,451 --> 00:09:49,356
カードを登録していない人にも
最適なオプションです

140
00:09:50,524 --> 00:09:52,593
例を見せましょう

141
00:09:54,328 --> 00:09:57,531
一番上がApple Payです

142
00:09:57,931 --> 00:10:02,236
ボタンがすぐに
ユーザの目にとまるので

143
00:09:57,931 --> 00:10:02,236
ボタンがすぐに
ユーザの目にとまるので

144
00:10:03,303 --> 00:10:07,875
購入手続きが
より迅速に行えます

145
00:10:09,143 --> 00:10:12,179
以上が
簡単で迅速な方法です

146
00:10:12,279 --> 00:10:15,582
次に 合理化の効果を
見てみましょう

147
00:10:18,986 --> 00:10:21,855
合理化で最も重要な要素は

148
00:10:22,456 --> 00:10:24,925
Apple Payから
顧客情報を得ることです

149
00:10:25,893 --> 00:10:28,495
データは既に
登録されているため

150
00:10:28,595 --> 00:10:31,698
それを使用すれば
手間が省けます

151
00:10:33,033 --> 00:10:37,271
データは関連事項だけを
要求してください

152
00:10:37,604 --> 00:10:42,009
それ以上を追加すると
複雑になります

153
00:10:43,076 --> 00:10:45,946
Apple Pay未対応の
データが必要なら

154
00:10:46,146 --> 00:10:48,215
購入手続きの前に収集します

155
00:10:48,448 --> 00:10:52,553
商品の個数や
バウチャーコードなどです

156
00:10:53,854 --> 00:10:59,760
今年は ２つの変更で
Apple Payを合理化しました

157
00:11:00,828 --> 00:11:03,630
まず
合計金額が０の場合です

158
00:11:04,331 --> 00:11:06,133
なぜ重要か 説明します

159
00:11:08,135 --> 00:11:12,606
このシートでは割引後も
合計金額が０以上です

160
00:11:13,106 --> 00:11:16,109
割引により
合計が０になる場合

161
00:11:16,610 --> 00:11:18,846
以前は表示されませんでした

162
00:11:19,279 --> 00:11:23,417
これからは合計が０でも
表示されます

163
00:11:23,517 --> 00:11:30,224
送料情報など 購入に必要な情報は
今までどおり収集されます

164
00:11:31,892 --> 00:11:34,761
このサポートは
定期購入にも有効です

165
00:11:36,230 --> 00:11:41,034
初回月を無料にする場合も
０と出るので 分かりやすいです

166
00:11:41,668 --> 00:11:46,173
ただし
定期購入とセール時の金額は

167
00:11:46,440 --> 00:11:49,143
明確に掲示してください

168
00:11:51,011 --> 00:11:55,883
この変更はiOS 12で使用可能で
今後のWebKitにも導入されます

169
00:11:56,850 --> 00:12:02,322
旧バージョンでは 現行の
動作にフォールバックします

170
00:11:56,850 --> 00:12:02,322
旧バージョンでは 現行の
動作にフォールバックします

171
00:12:03,624 --> 00:12:07,528
iOS 12で合理化された
２つ目の点は

172
00:12:07,694 --> 00:12:09,563
新たなネットワークです

173
00:12:10,464 --> 00:12:14,835
カードの検索条件を
絞ることができます

174
00:12:16,370 --> 00:12:19,573
追加されたのは
ElectronとMaestroと

175
00:12:19,673 --> 00:12:20,807
VPayです

176
00:12:22,109 --> 00:12:27,281
ネットワークはできるだけ
多いほうがいいでしょう

177
00:12:29,049 --> 00:12:32,452
iOS 12と
今後のWebKitで使用可能です

178
00:12:34,154 --> 00:12:37,457
以上が
より簡単に迅速に―

179
00:12:37,691 --> 00:12:39,426
明快にする方法です

180
00:12:39,993 --> 00:12:44,898
新機能を全て活用し
最高の体験をしてください

181
00:12:45,966 --> 00:12:48,869
最後に
ウェブ上でのApple Payと

182
00:12:49,069 --> 00:12:51,638
W3CのPayment Request APIに
触れます

183
00:12:53,140 --> 00:12:59,479
この数年 開発を手伝うため
W3Cと仕事をしてきました

184
00:12:59,713 --> 00:13:00,948
ここで―

185
00:12:59,713 --> 00:13:00,948
ここで―

186
00:13:01,048 --> 00:13:05,719
Apple Pay JS APIと
どちらか迷うはずです

187
00:13:06,320 --> 00:13:09,056
それぞれの利点を
比較しましょう

188
00:13:10,624 --> 00:13:13,727
Payment Request APIは
クロスブラウザですが

189
00:13:14,027 --> 00:13:18,332
Apple PayはSafariにのみ
対応しています

190
00:13:19,299 --> 00:13:21,602
Payment Request APIを
選んだ場合

191
00:13:22,135 --> 00:13:24,505
次の機能を
逃すことになります

192
00:13:25,339 --> 00:13:28,709
先ほど説明した
エラーハンドリングや

193
00:13:29,243 --> 00:13:33,313
加盟カードや提携カードの
自動選択です

194
00:13:34,281 --> 00:13:38,519
それらが選択されても
価格調整はできません

195
00:13:39,486 --> 00:13:41,522
そして 特定の地域で必要な

196
00:13:41,655 --> 00:13:44,291
音声表記にも
対応していません

197
00:13:45,192 --> 00:13:48,762
一方 Apple Pay JS APIは
サポート範囲が広く

198
00:13:48,862 --> 00:13:51,999
iOS 10やmacOS 10.12から
対応しています

199
00:13:52,966 --> 00:13:55,536
目的に合うほうを
選んでください

200
00:13:55,669 --> 00:13:57,538
Payment Request APIなら

201
00:13:57,638 --> 00:14:02,509
Apple Pay JS API を
フォールバックにしてください

202
00:13:57,638 --> 00:14:02,509
Apple Pay JS API を
フォールバックにしてください

203
00:14:04,044 --> 00:14:07,948
Apple Pay JS APIを
始めるための

204
00:14:08,048 --> 00:14:10,884
デモページがあるので
ご覧ください

205
00:14:12,553 --> 00:14:16,056
必要な作業を
１つずつ説明しています

206
00:14:16,523 --> 00:14:18,458
まずはApple Payボタン

207
00:14:19,259 --> 00:14:24,198
サイズや配置を
リアルタイムで変更できます

208
00:14:24,565 --> 00:14:28,469
学習させるコードも
改善されました

209
00:14:29,269 --> 00:14:32,439
購入のフローを
試すこともできます

210
00:14:33,874 --> 00:14:36,543
JSONを設定すると

211
00:14:36,643 --> 00:14:40,814
ペイメントシートの表示に
Apple Payボタンが使われます

212
00:14:41,748 --> 00:14:46,520
そして オーソリゼーションの
結果が直接表示されます

213
00:14:46,954 --> 00:14:50,891
ここでは請求されないので
ご安心ください

214
00:14:51,692 --> 00:14:55,362
適用前に
ぜひデモをお試しください

215
00:14:56,296 --> 00:14:58,665
デモページはオンラインで
利用できます

216
00:14:59,867 --> 00:15:02,636
Apple Payについては
以上です

217
00:14:59,867 --> 00:15:02,636
Apple Payについては
以上です

218
00:15:02,769 --> 00:15:06,039
次は パスを最大限に
生かす方法です

219
00:15:09,109 --> 00:15:12,846
パスには
特別な思い入れがあります

220
00:15:13,480 --> 00:15:15,916
改良点について話す前に

221
00:15:16,083 --> 00:15:19,286
パスのすばらしさを
復習しましょう

222
00:15:20,487 --> 00:15:24,591
非接触型やバーコード付きで
使いやすさが抜群です

223
00:15:25,692 --> 00:15:28,362
iCloudで
他のデバイスと同期し―

224
00:15:29,663 --> 00:15:34,134
ロック画面に表示させると
素早くアクセスできます

225
00:15:35,302 --> 00:15:39,807
現実の世界まで
シームレスな顧客体験が続き

226
00:15:39,907 --> 00:15:42,042
パスは映画券などに最適です

227
00:15:43,577 --> 00:15:45,746
だからこそ お勧めできます

228
00:15:46,046 --> 00:15:48,649
では ユーザが
活用するには？

229
00:15:49,283 --> 00:15:51,385
４つにまとめました

230
00:15:52,853 --> 00:15:55,989
まず Walletへの追加です

231
00:15:56,390 --> 00:15:58,659
後で実践してみましょう

232
00:15:59,693 --> 00:16:02,095
次に 魅力的に見せること

233
00:15:59,693 --> 00:16:02,095
次に 魅力的に見せること

234
00:16:02,496 --> 00:16:07,067
新しいデザインの
オプションもあります

235
00:16:08,569 --> 00:16:11,138
３つ目は
豊富なコンテンツです

236
00:16:11,572 --> 00:16:14,908
システムと
より一体化させられます

237
00:16:15,843 --> 00:16:19,513
最後に
非接触型パスの利用です

238
00:16:20,848 --> 00:16:23,083
パスの追加から始めましょう

239
00:16:23,484 --> 00:16:29,523
フルモデルUIでの追加より
優れた方法があります

240
00:16:31,525 --> 00:16:36,430
お勧めするのは
Appleの自動パス追加APIです

241
00:16:37,364 --> 00:16:43,770
まず 追加したいパスの配列で
パス追加の関数を呼び出すと

242
00:16:44,304 --> 00:16:49,209
ユーザへ パスのレビューか
追加を問います

243
00:16:49,676 --> 00:16:53,113
これはフルスクリーンモデルの
UIより摩擦が少なく

244
00:16:54,014 --> 00:16:57,184
さらにパスを全てレビューする
オプションもあります

245
00:16:57,351 --> 00:17:02,289
完了時にユーザへの問いを処理し
View Controllerを表示しましょう

246
00:16:57,351 --> 00:17:02,289
完了時にユーザへの問いを処理し
View Controllerを表示しましょう

247
00:17:02,856 --> 00:17:06,425
後のデモで
その効果を見てください

248
00:17:07,694 --> 00:17:10,731
他にも良い方法があります

249
00:17:11,598 --> 00:17:16,670
App外で作られたパスの
追加方法です

250
00:17:16,936 --> 00:17:20,874
例えば ユーザが初めて
そのAppを利用した場合は

251
00:17:21,241 --> 00:17:25,378
パスの追加経験がないため
追加を促す好機です

252
00:17:26,346 --> 00:17:31,552
その時 関連するパスを
加えるのがコツです

253
00:17:31,818 --> 00:17:37,357
すると 注文履歴などからは
入手できなかったパスを

254
00:17:37,458 --> 00:17:39,359
スムーズに追加できます

255
00:17:40,227 --> 00:17:44,198
反対に ユーザが既に
パスを持っていれば

256
00:17:44,298 --> 00:17:45,699
そこにリンクを貼りましょう

257
00:17:46,099 --> 00:17:50,037
そうすれば ユーザがどの時点で
Walletを使い始めても

258
00:17:50,237 --> 00:17:51,538
パスを入手できます

259
00:17:52,706 --> 00:17:57,377
パスの自動追加機能を使えば
さらに快適です

260
00:17:58,812 --> 00:18:01,415
次に
魅力的に見せる方法です

261
00:17:58,812 --> 00:18:01,415
次に
魅力的に見せる方法です

262
00:18:03,150 --> 00:18:08,288
まず ユーザが目にするパスの
フィールドには

263
00:18:08,388 --> 00:18:11,458
関連性のある重要な情報が
必要です

264
00:18:12,659 --> 00:18:14,795
さらに大事なことは

265
00:18:15,596 --> 00:18:18,298
目立つ色を使うことです

266
00:18:19,800 --> 00:18:23,170
全てのデバイスで
魅力的に見せましょう

267
00:18:24,371 --> 00:18:30,711
実物のパスのデザインに
似せようとしないでください

268
00:18:31,411 --> 00:18:37,417
優れたテンプレートと
レイアウトオプションで際立たせ

269
00:18:37,518 --> 00:18:42,189
対象ユーザが快適に
扱えるようにしましょう

270
00:18:44,224 --> 00:18:48,695
次に ユーザ情報は画像内に
エンコードしないでください

271
00:18:49,096 --> 00:18:51,098
フィールドのために
リザーブしましょう

272
00:18:51,832 --> 00:18:54,167
Apple Watchには
重要なことです

273
00:18:54,735 --> 00:18:59,006
ユーザ情報を表示する余裕は
ありません

274
00:18:59,840 --> 00:19:06,180
サムネールも表示されないため
ユーザは詳細を見られません

275
00:18:59,840 --> 00:19:06,180
サムネールも表示されないため
ユーザは詳細を見られません

276
00:19:07,414 --> 00:19:12,886
このように 全ての情報を
載せきれないことがあるはずです

277
00:19:13,086 --> 00:19:17,891
今日は 行の追加機能で
その悩みを解決します

278
00:19:18,592 --> 00:19:20,327
デモを見てください

279
00:19:21,495 --> 00:19:26,200
セクションと座席番号が載った
３つ目の行が追加されました

280
00:19:27,367 --> 00:19:32,873
これで 情報量が多い場合
項目を増やすことができます

281
00:19:33,540 --> 00:19:37,778
pass.jsonを使えば
簡単にできます

282
00:19:39,646 --> 00:19:45,319
まず ０または１を設定し
新たな行キーを出します

283
00:19:45,552 --> 00:19:49,923
パスの前面が２分割されるよう
指示してください

284
00:19:53,894 --> 00:19:59,032
行は 催し物の入場券の
補助フィールドでのみ使えます

285
00:19:59,399 --> 00:20:03,604
対応値は０と１で
プレリリース版で利用可能

286
00:19:59,399 --> 00:20:03,604
対応値は０と１で
プレリリース版で利用可能

287
00:20:04,505 --> 00:20:07,207
旧バージョンでは
行は無視され―

288
00:20:07,541 --> 00:20:11,044
補助フィールドは１行のみで

289
00:20:11,245 --> 00:20:13,981
１行につき
最大４フィールドです

290
00:20:14,882 --> 00:20:17,451
そのため 計画的に
デザインしてください

291
00:20:17,684 --> 00:20:20,554
対応デバイスでも
見え方を確認しましょう

292
00:20:22,656 --> 00:20:25,993
これで見栄えの良いパスの
完成です

293
00:20:26,326 --> 00:20:28,562
次に コンテンツを
豊富にさせるには？

294
00:20:29,997 --> 00:20:31,632
パスを活用しましょう

295
00:20:31,732 --> 00:20:36,937
情報を組み込めば
ユーザにとってより便利になります

296
00:20:37,438 --> 00:20:40,340
１つの例は“関連性”です

297
00:20:41,742 --> 00:20:47,514
例えば pass.jsonフィールドに
場所や関連する日付を設定し

298
00:20:48,549 --> 00:20:53,487
所定の時刻に
パスを表示することです

299
00:20:53,887 --> 00:20:56,223
関連する複数のパスにも対応

300
00:20:56,590 --> 00:20:59,993
１回用と複数回用を
発行する場合

301
00:21:00,727 --> 00:21:03,630
関連情報はそれぞれに
必要です

302
00:21:03,730 --> 00:21:07,367
そして １つずつ正確に
表示させましょう

303
00:21:08,168 --> 00:21:13,106
パスを驚くほど
使いやすくできます

304
00:21:13,707 --> 00:21:18,645
そして さらに便利にするのが
セマンティックタグです

305
00:21:21,515 --> 00:21:26,353
pass.jsonでお見せした
フィールドは表示に最適で

306
00:21:26,753 --> 00:21:31,391
デベロッパの皆さんが
フィールド名を管理できます

307
00:21:32,693 --> 00:21:38,799
しかし 独自のネームを全て
iOSが判断するのは困難です

308
00:21:39,833 --> 00:21:42,102
セマンティックタグは

309
00:21:42,202 --> 00:21:47,941
固定フォーマットデータで
表示データを増やします

310
00:21:48,709 --> 00:21:53,213
私が見に行く映画のパスで
説明しましょう

311
00:21:55,415 --> 00:22:00,654
主 副 補助の
各フィールドのサンプルです

312
00:21:55,415 --> 00:22:00,654
主 副 補助の
各フィールドのサンプルです

313
00:22:01,488 --> 00:22:05,025
映画「パスの復讐」は
Apple Parkで上映

314
00:22:05,125 --> 00:22:08,028
上映時間２時間45分
シアターＦ５

315
00:22:08,362 --> 00:22:14,468
会場での必要な情報が
全てそろい すぐに利用できます

316
00:22:15,536 --> 00:22:18,939
セマンティックタグを
加えてみましょう

317
00:22:20,774 --> 00:22:23,610
まず
セマンティック辞書を加え

318
00:22:23,911 --> 00:22:30,551
機械可読にするためのキー名を
私のドキュメントから使います

319
00:22:31,418 --> 00:22:37,791
表示される映画の題名が
公式でない場合もあるでしょう

320
00:22:38,192 --> 00:22:40,327
会場名も然りです

321
00:22:40,928 --> 00:22:44,331
公式の名称であるべきです

322
00:22:45,399 --> 00:22:51,872
催し物に関連していても
表示の必要がない情報もあります

323
00:22:51,972 --> 00:22:53,574
例えば 電話番号です

324
00:22:54,408 --> 00:22:59,112
フィールドに関連のない
セマンティックデータを

325
00:22:59,479 --> 00:23:03,283
最上級のセマンティック辞書が
捕らえてくれます

326
00:22:59,479 --> 00:23:03,283
最上級のセマンティック辞書が
捕らえてくれます

327
00:23:03,717 --> 00:23:08,755
上映中は通知をオフにする
タグも加えました

328
00:23:09,923 --> 00:23:14,495
秒単位の上映時間と
催し物の種類も示します

329
00:23:15,762 --> 00:23:18,866
また Keynoteと同様に
Siriの働きで

330
00:23:18,966 --> 00:23:22,836
所定の時刻には
“おやすみモード”になります

331
00:23:23,904 --> 00:23:27,774
映画や催し物の入場券に
最適です

332
00:23:30,744 --> 00:23:35,415
まとめると 機械可読の情報を
加えられるタグで

333
00:23:35,983 --> 00:23:40,254
交通系と催し物向けタグが
70以上あります

334
00:23:40,687 --> 00:23:44,291
キーはオンラインで
入手可能になります

335
00:23:45,526 --> 00:23:50,831
セマンティックタグとの併用で
関連情報は機能するため

336
00:23:51,198 --> 00:23:54,001
ぜひ両方を追加してください

337
00:23:55,435 --> 00:23:59,206
では 以上の機能をまとめ
非接触型パスを説明します

338
00:24:01,542 --> 00:24:06,246
ユーザとWalletとの関わりに
不可欠な機能で―

339
00:24:06,413 --> 00:24:10,017
バーコードのスキャンが
進化したものです

340
00:24:11,185 --> 00:24:14,121
使い方の好例があります

341
00:24:14,922 --> 00:24:17,458
世界に名高い
ウェンブリー･スタジアムで

342
00:24:17,624 --> 00:24:21,428
サッカー選手が
使い方を紹介しています

343
00:24:22,162 --> 00:24:23,330
(音楽)

344
00:24:23,430 --> 00:24:25,666
Apple Walletに
チケットを入れ

345
00:24:25,766 --> 00:24:27,801
Apple Watchで
会場にチェックイン

346
00:24:29,469 --> 00:24:32,005
スワイプして
通知をチェック

347
00:24:33,974 --> 00:24:35,409
ダブルクリックで
起動させ

348
00:24:38,078 --> 00:24:39,413
リーダーにかざします

349
00:24:40,848 --> 00:24:42,683
さあ 入場！

350
00:24:42,783 --> 00:24:45,152
非接触型チケットは―

351
00:24:45,252 --> 00:24:49,089
Apple Walletの中に

352
00:24:51,992 --> 00:24:53,827
こんなに簡単です

353
00:24:54,127 --> 00:25:00,601
ロック画面表示を併用すれば
まるで魔法のような機能です

354
00:24:54,127 --> 00:25:00,601
ロック画面表示を併用すれば
まるで魔法のような機能です

355
00:25:01,835 --> 00:25:05,706
非接触型パスの利用には
NFCの認証が必要です

356
00:25:06,673 --> 00:25:11,378
良いユースケースがあれば
ご連絡ください

357
00:25:12,980 --> 00:25:14,815
そして 非接触型リーダーは

358
00:25:14,915 --> 00:25:20,787
Appleの通信規約に
対応するものを選びましょう

359
00:25:21,488 --> 00:25:23,357
とにかく シンプルです

360
00:25:24,558 --> 00:25:28,362
リーダーは これらの会社から
選んでください

361
00:25:30,063 --> 00:25:34,434
そして 最後に紹介する
非接触型パスの使用例は

362
00:25:34,535 --> 00:25:36,136
学生証です

363
00:25:37,471 --> 00:25:40,207
実物の学生証が
使える場所なら

364
00:25:40,307 --> 00:25:44,645
これで
アクセスも支払いも可能です

365
00:25:45,546 --> 00:25:51,018
２社と協力し 全米の
教育機関に導入しました

366
00:25:51,485 --> 00:25:56,657
では 今日発表した機能を
デモで見せてくれる―

367
00:25:56,757 --> 00:25:58,125
同僚のケイティです

368
00:25:58,826 --> 00:26:06,533
(拍手)

369
00:25:58,826 --> 00:26:06,533
(拍手)

370
00:26:07,301 --> 00:26:08,368
ありがとうございます

371
00:26:08,769 --> 00:26:13,207
WalletとApple Payの技術者
ケイティです

372
00:26:13,407 --> 00:26:16,477
ご紹介するのは
Swiftで作るAppです

373
00:26:16,577 --> 00:26:21,682
私が週末のパーティーを
企画して入場券を売り

374
00:26:22,115 --> 00:26:28,155
同僚がこのAppから買うと
私はわずかな利益を得ます

375
00:26:28,655 --> 00:26:31,091
２つのデモをお見せします

376
00:26:31,725 --> 00:26:35,362
まず 新しいAPIの活用方法で

377
00:26:35,462 --> 00:26:40,834
WalletとApple Payでの体験を
シームレスにします

378
00:26:41,468 --> 00:26:44,705
そして 顧客体験を
向上させる―

379
00:26:44,805 --> 00:26:47,641
pass.jsonの構築方法です

380
00:26:48,408 --> 00:26:50,510
では Appをご覧ください

381
00:26:50,644 --> 00:26:58,018
これは催し物のサマリで
日時 場所 料金が載っています

382
00:26:59,052 --> 00:27:04,892
“Apple Payで購入”ボタンも
このページにあるので

383
00:26:59,052 --> 00:27:04,892
“Apple Payで購入”ボタンも
このページにあるので

384
00:27:05,592 --> 00:27:07,628
購入してみましょう

385
00:27:09,496 --> 00:27:13,700
すると Apple Payシートが
出てきます

386
00:27:14,034 --> 00:27:17,137
合理化の良い例ですね

387
00:27:17,271 --> 00:27:22,142
要求される情報は
Eメールアドレスなど最小限です

388
00:27:22,976 --> 00:27:26,113
Face IDで支払いましょう

389
00:27:32,085 --> 00:27:37,357
すると 購入内容と
催し物の詳細が出てきます

390
00:27:37,858 --> 00:27:40,460
下にQRコードと―

391
00:27:40,727 --> 00:27:45,232
Add to Apple Walletの
ボタンがあります

392
00:27:45,365 --> 00:27:52,072
このように Appに埋め込まれた
QRコードはよく見かけます

393
00:27:52,272 --> 00:27:57,444
パスの前面に出ていれば
埋め込む必要はありません

394
00:27:58,145 --> 00:28:01,115
では Walletに
追加しましょう

395
00:27:58,145 --> 00:28:01,115
では Walletに
追加しましょう

396
00:28:03,083 --> 00:28:07,855
ユーザが見返せるよう
パスに表示しています

397
00:28:07,955 --> 00:28:11,225
パーティーの情報と
QRコードです

398
00:28:11,825 --> 00:28:12,926
それを加えましょう

399
00:28:15,762 --> 00:28:18,866
そして JSONに変換します

400
00:28:18,966 --> 00:28:22,703
パスがどう改善するか
見てみましょう

401
00:28:25,205 --> 00:28:27,674
修正したい点は２つあります

402
00:28:28,175 --> 00:28:33,347
まず 来場者を非接触型リーダーで
チェックすること

403
00:28:34,114 --> 00:28:38,418
次に 会場であるこの
ディスカバリーメドーに

404
00:28:38,519 --> 00:28:44,191
ユーザが近付いたら ロック画面に
パスを表示させることです

405
00:28:45,826 --> 00:28:48,896
バーコード辞書を
見てみましょう

406
00:28:49,696 --> 00:28:53,233
非接触型リーダーを
使用するので

407
00:28:53,433 --> 00:28:56,103
QRコードの表示は不要です

408
00:28:56,203 --> 00:28:58,138
これを外して―

409
00:28:58,972 --> 00:29:02,376
代わりにNFC辞書を入れます

410
00:28:58,972 --> 00:29:02,376
代わりにNFC辞書を入れます

411
00:29:04,511 --> 00:29:09,383
リーダーに渡した
来場者を認識する情報が

412
00:29:09,483 --> 00:29:11,952
ここに含まれています

413
00:29:13,420 --> 00:29:18,625
次に パスに位置情報を加え
ロック画面に表示させます

414
00:29:20,594 --> 00:29:24,031
緯度と経度をここに入れます

415
00:29:24,498 --> 00:29:26,433
今 私たちがいる場所です

416
00:29:26,533 --> 00:29:30,571
関連するテキストが
ロック画面に通知されます

417
00:29:31,972 --> 00:29:38,011
次に Appがどのように
変わったか見てみましょう

418
00:29:41,148 --> 00:29:44,518
このように従来の
Add Passメソッドでは

419
00:29:44,718 --> 00:29:48,755
Add to Walletボタンのタップで
呼び出せました

420
00:29:49,756 --> 00:29:54,761
これは関数eventPassからの
パスです

421
00:29:55,129 --> 00:29:57,998
修正されたパスに
置き換えましょう

422
00:30:01,368 --> 00:30:06,240
そのパスでPKAddPassesView
Controllerを生成し

423
00:30:06,340 --> 00:30:07,841
表示しました

424
00:30:08,809 --> 00:30:10,043
ベンが話したように

425
00:30:10,144 --> 00:30:14,815
パスの自動追加に便利な
APIがあります

426
00:30:15,249 --> 00:30:19,219
この２行を削除し
そのAPIに置き換えましょう

427
00:30:20,921 --> 00:30:25,592
PKPassLibraryの
インスタンスを生成し

428
00:30:27,261 --> 00:30:29,596
APIを呼び出します

429
00:30:31,365 --> 00:30:35,269
関数addPassesが
パスの配列を使い

430
00:30:35,802 --> 00:30:38,372
ステータスで
完了ハンドラを設定

431
00:30:38,539 --> 00:30:41,175
返るステータスは３種類です

432
00:30:41,775 --> 00:30:46,146
didAddPassesはユーザが
パスの追加を望み―

433
00:30:46,647 --> 00:30:50,684
didCancelAddPassesは
望まないという意味です

434
00:30:51,151 --> 00:30:52,953
shouldReviewPassesは

435
00:30:53,420 --> 00:30:59,960
プレビューを見てから
パスの追加を決めるという意味です

436
00:31:00,094 --> 00:31:01,495
この場合も同様に

437
00:31:01,595 --> 00:31:08,469
PKAddPassesViewControllerを
生成して表示します

438
00:31:10,137 --> 00:31:13,073
次は
viewDidLoadメソッドです

439
00:31:14,208 --> 00:31:16,643
ここにはQRコードが
ありました

440
00:31:17,244 --> 00:31:20,848
パスにQRコードがあれば
App内には不要です

441
00:31:20,948 --> 00:31:24,885
パスは今 NFC対応なので
このビューは要りません

442
00:31:24,985 --> 00:31:27,955
このコードも削除しましょう

443
00:31:31,525 --> 00:31:35,696
ここにはPKAddPassButton

444
00:31:36,096 --> 00:31:38,365
または Add to Walletボタンです

445
00:31:39,066 --> 00:31:42,636
他にも ユーザの体験を向上させる
秘けつがあります

446
00:31:42,836 --> 00:31:46,740
入場券購入の直後に
サマリが表示されたら

447
00:31:46,840 --> 00:31:53,447
パスをWalletへ追加するか否かを
すぐにユーザに尋ねましょう

448
00:31:53,947 --> 00:31:58,218
ユーザが後で追加することを
選んだ時のために

449
00:31:58,318 --> 00:32:01,121
ボタンを他に
配置することもできます

450
00:31:58,318 --> 00:32:01,121
ボタンを他に
配置することもできます

451
00:32:02,055 --> 00:32:04,358
では このボタンを外しましょう

452
00:32:06,927 --> 00:32:11,031
View in Walletボタンと
置き換えます

453
00:32:13,767 --> 00:32:18,272
すると ユーザは
タップでWalletに直行し

454
00:32:18,505 --> 00:32:20,874
追加したパスを
チェックできます

455
00:32:22,876 --> 00:32:28,682
その画面ですぐに
追加の希望を尋ねましょう

456
00:32:31,785 --> 00:32:36,457
では デバイスにデプロイして
見え方をチェックします

457
00:32:45,232 --> 00:32:48,335
まず 催し物のサマリです

458
00:32:48,836 --> 00:32:51,405
再度 パスを購入します

459
00:32:59,980 --> 00:33:03,884
今度はすぐに
パス追加の質問が出ます

460
00:32:59,980 --> 00:33:03,884
今度はすぐに
パス追加の質問が出ます

461
00:33:04,051 --> 00:33:08,655
背景コードにQRコードは
もうありません

462
00:33:08,856 --> 00:33:13,126
View in Walletボタンに
変わったので

463
00:33:13,827 --> 00:33:15,796
Walletに追加します

464
00:33:16,897 --> 00:33:18,499
見てみましょう

465
00:33:20,100 --> 00:33:22,336
すぐにパスが表示され

466
00:33:22,503 --> 00:33:25,038
QRコードが
無くなった代わりに

467
00:33:25,172 --> 00:33:30,377
Hold Near Readerが
表示されました

468
00:33:30,477 --> 00:33:34,281
到着したら
スキャンするだけです

469
00:33:35,716 --> 00:33:40,187
ここは開催地の付近です
デバイスをロックしてみて―

470
00:33:40,287 --> 00:33:43,390
ロック画面の表示が適切か
見てみましょう

471
00:33:46,360 --> 00:33:50,831
JSONで設定した通知が
出ていますね

472
00:33:50,998 --> 00:33:52,666
タップします

473
00:33:53,400 --> 00:33:55,302
パスが出ました

474
00:33:55,736 --> 00:34:00,974
到着したと想定し
リーダーでスキャンしてみます

475
00:33:55,736 --> 00:34:00,974
到着したと想定し
リーダーでスキャンしてみます

476
00:34:03,510 --> 00:34:04,812
こんなに簡単です

477
00:34:07,514 --> 00:34:12,820
今回の変更点とAppとの
相互作用を生かして

478
00:34:12,920 --> 00:34:16,356
顧客体験を
向上させてください

479
00:34:17,024 --> 00:34:19,159
では ベンに代わります

480
00:34:19,393 --> 00:34:23,197
(拍手)

481
00:34:23,429 --> 00:34:25,466
ケイティ ありがとう

482
00:34:25,899 --> 00:34:28,635
すばらしい改善でした

483
00:34:29,636 --> 00:34:33,373
さて 最後の題目は
デジタルの先にある―

484
00:34:33,474 --> 00:34:35,042
フィジカルコマースです

485
00:34:35,141 --> 00:34:40,080
Apple Payを
支払いの手段にとどめず

486
00:34:40,714 --> 00:34:44,485
現実の世界につなげることが
大切です

487
00:34:45,052 --> 00:34:47,286
２つの例を見せます

488
00:34:47,554 --> 00:34:52,592
まず 毎日 数千人の社員が利用する
Apple Parkの食堂のAppです

489
00:34:54,194 --> 00:34:58,832
Appを開くと すぐに
本日のお勧めが表示されて

490
00:34:59,533 --> 00:35:04,705
App内の全ての商品を
見なくて済みます

491
00:34:59,533 --> 00:35:04,705
App内の全ての商品を
見なくて済みます

492
00:35:05,439 --> 00:35:08,842
Apple Payボタンは
ありません

493
00:35:09,076 --> 00:35:11,378
ここは食堂では
ないからです

494
00:35:12,579 --> 00:35:16,116
お店に近付くと
GPSなどを使って

495
00:35:16,216 --> 00:35:18,986
Appが変更点を検出し
ボタンが現れます

496
00:35:19,486 --> 00:35:23,857
すると 開始ページから
即購入できます

497
00:35:24,391 --> 00:35:28,162
複数の注文をしても
お店は手配してくれます

498
00:35:28,862 --> 00:35:35,636
複数点でも１点購入と同様に
商品ページから購入できます

499
00:35:36,570 --> 00:35:40,808
App内のどこからでも
購入手続きが可能です

500
00:35:41,942 --> 00:35:44,845
操作はとてもシンプルです

501
00:35:45,512 --> 00:35:49,249
支払いはFace IDで完了

502
00:35:49,917 --> 00:35:54,655
ご覧の通り
要求されることは最小限です

503
00:35:55,122 --> 00:35:59,827
ユーザが他のAppに
ログイン中でなければ

504
00:35:59,993 --> 00:36:03,330
情報を要求するチャンスです

505
00:35:59,993 --> 00:36:03,330
情報を要求するチャンスです

506
00:36:03,430 --> 00:36:07,101
最小限の情報を求め
活用してください

507
00:36:08,202 --> 00:36:13,340
注文の確認が終了したので
後は通知を待ちます

508
00:36:13,874 --> 00:36:18,745
私が お店に近付くと
準備完了の通知が届き

509
00:36:19,713 --> 00:36:22,349
到着すれば
ピザができています

510
00:36:22,482 --> 00:36:27,721
お店のスタッフがチケットと
私の名前を確認し

511
00:36:27,921 --> 00:36:29,656
後は食べるだけ

512
00:36:30,324 --> 00:36:33,327
これが快適な体験の
一部始終です

513
00:36:34,261 --> 00:36:39,333
優れたフードオーダーAppは
中国にもあります

514
00:36:40,534 --> 00:36:45,706
入店時にiPhoneで
QRコードをスキャンすると

515
00:36:45,806 --> 00:36:48,775
App内のメニューに飛びます

516
00:36:50,544 --> 00:36:55,782
画像があるので選びやすく
支払いもスムーズです

517
00:36:58,418 --> 00:37:04,324
決済の段階でユーザは
バーチャル決済の認証を受けます

518
00:36:58,418 --> 00:37:04,324
決済の段階でユーザは
バーチャル決済の認証を受けます

519
00:37:04,591 --> 00:37:08,629
Appleのプロビジョニングで
カードは直接Walletへ

520
00:37:09,029 --> 00:37:13,834
Walletにもカードがない
ユーザでも―

521
00:37:14,167 --> 00:37:16,737
これだけで注文できます

522
00:37:17,538 --> 00:37:24,044
中国ではApple Pay対応の
Eコマースなどで使用できます

523
00:37:25,913 --> 00:37:30,517
この場合 支払いは
Apple Payが最適です

524
00:37:30,718 --> 00:37:32,653
デフォルト化の好例です

525
00:37:34,788 --> 00:37:37,124
Face IDで注文は完了

526
00:37:38,158 --> 00:37:41,662
全ての技術を駆使した
体験です

527
00:37:41,762 --> 00:37:46,366
GPS ビーコン カメラ
そして 通知機能

528
00:37:47,201 --> 00:37:51,071
これらの技術を
組み合わせて活用すれば

529
00:37:51,705 --> 00:37:57,578
現実の世界までつながる
優れた顧客体験を構築できます

530
00:37:58,078 --> 00:38:00,480
最後に もう１つ

531
00:37:58,078 --> 00:38:00,480
最後に もう１つ

532
00:38:01,281 --> 00:38:03,884
決済代行会社や
マーチャントの方は

533
00:38:04,084 --> 00:38:06,920
サーバ証明書の期限を

534
00:38:07,021 --> 00:38:09,656
デベロッパポータルで
ご確認ください

535
00:38:10,190 --> 00:38:12,226
更新は簡単です

536
00:38:12,760 --> 00:38:16,997
Apple Payの利用前に
行ってください

537
00:38:18,232 --> 00:38:20,234
今日のセッションは
ここまでです

538
00:38:20,467 --> 00:38:24,605
より詳しい情報は
オンラインにもあります

539
00:38:24,838 --> 00:38:28,108
今日の内容に関して
ご質問があれば

540
00:38:28,208 --> 00:38:32,412
この後 10時に
ラボへお越しください

541
00:38:32,746 --> 00:38:36,617
ご清聴
ありがとうございました

542
00:38:36,750 --> 00:38:38,185
(拍手)